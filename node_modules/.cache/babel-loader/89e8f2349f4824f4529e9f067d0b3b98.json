{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/youn/Documents/younFolder/Demo/react-electron-pc/src/pages/Login/components/SetThemes.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { themeList } from '@/utils';\n\nconst SetThemes = () => {\n  _s();\n\n  const setTheme = index => {\n    for (let val of themeList) {\n      val.select = false;\n    }\n\n    themeList[index].select = true;\n    localStorage.setItem('themeCount', `${index}`);\n    window.less.modifyVars(themeList[index]).then(() => {\n      // eslint-disable-next-line no-console\n      console.info('主题切换成功');\n    }).catch(error => {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    });\n  }; // 初始化更改主题\n\n\n  useEffect(() => {\n    setTheme(0);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u4E3B\\u9898\\u9009\\u62E9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-color\",\n      children: themeList.map((val, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setTheme(index),\n        className: \"choice\",\n        style: {\n          background: val['@btn-primary-bg']\n        }\n      }, val['@btn-primary-bg'], false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SetThemes, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SetThemes;\nexport default SetThemes;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetThemes\");","map":{"version":3,"sources":["/Users/youn/Documents/younFolder/Demo/react-electron-pc/src/pages/Login/components/SetThemes.tsx"],"names":["React","useEffect","themeList","SetThemes","setTheme","index","val","select","localStorage","setItem","window","less","modifyVars","then","console","info","catch","error","map","background"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,SAA1B;;AAEA,MAAMC,SAAa,GAAG,MAAoB;AAAA;;AACxC,QAAMC,QAAQ,GAAIC,KAAD,IAAyB;AACxC,SAAK,IAAIC,GAAT,IAAgBJ,SAAhB,EAA2B;AACzBI,MAAAA,GAAG,CAACC,MAAJ,GAAa,KAAb;AACD;;AACDL,IAAAA,SAAS,CAACG,KAAD,CAAT,CAAiBE,MAAjB,GAA0B,IAA1B;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAoC,GAAEJ,KAAM,EAA5C;AACAK,IAAAA,MAAM,CAACC,IAAP,CACGC,UADH,CACcV,SAAS,CAACG,KAAD,CADvB,EAEGQ,IAFH,CAEQ,MAAM;AACV;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,QAAb;AACD,KALH,EAMGC,KANH,CAMUC,KAAD,IAAgB;AACrB;AACAH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD,KATH;AAUD,GAhBD,CADwC,CAmBxC;;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACGF,SAAS,CAACgB,GAAV,CAAc,CAACZ,GAAD,EAAMD,KAAN,kBACb;AACE,QAAA,OAAO,EAAE,MAAMD,QAAQ,CAACC,KAAD,CADzB;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,KAAK,EAAE;AAAEc,UAAAA,UAAU,EAAEb,GAAG,CAAC,iBAAD;AAAjB;AAHT,SAIOA,GAAG,CAAC,iBAAD,CAJV;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAeD,CAtCD;;GAAMH,S;;KAAAA,S;AAwCN,eAAeA,SAAf","sourcesContent":["import React, { FC, ReactElement, useEffect } from 'react';\nimport { themeList } from '@/utils';\n\nconst SetThemes: FC = (): ReactElement => {\n  const setTheme = (index: number): void => {\n    for (let val of themeList) {\n      val.select = false;\n    }\n    themeList[index].select = true;\n    localStorage.setItem('themeCount', `${index}`);\n    window.less\n      .modifyVars(themeList[index])\n      .then(() => {\n        // eslint-disable-next-line no-console\n        console.info('主题切换成功');\n      })\n      .catch((error: any) => {\n        // eslint-disable-next-line no-console\n        console.error(error);\n      });\n  };\n\n  // 初始化更改主题\n  useEffect(() => {\n    setTheme(0);\n  }, []);\n  return (\n    <>\n      <p>主题选择</p>\n      <div className=\"select-color\">\n        {themeList.map((val, index) => (\n          <div\n            onClick={() => setTheme(index)}\n            className=\"choice\"\n            style={{ background: val['@btn-primary-bg'] }}\n            key={val['@btn-primary-bg']}\n          ></div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default SetThemes;\n"]},"metadata":{},"sourceType":"module"}