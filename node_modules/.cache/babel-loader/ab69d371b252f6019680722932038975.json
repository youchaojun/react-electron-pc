{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useState, useMemo, useCallback } from 'react';\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport Item from './Item';\nimport { useBatchFrameState } from './hooks/useBatchFrameState';\nvar RESPONSIVE = 'responsive';\n\nfunction defaultRenderRest(omittedItems) {\n  return \"+ \".concat(omittedItems.length, \" ...\");\n}\n\nfunction Overflow(props, ref) {\n  var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-overflow' : _props$prefixCls,\n      _props$data = props.data,\n      data = _props$data === void 0 ? [] : _props$data,\n      renderItem = props.renderItem,\n      itemKey = props.itemKey,\n      _props$itemWidth = props.itemWidth,\n      itemWidth = _props$itemWidth === void 0 ? 10 : _props$itemWidth,\n      style = props.style,\n      className = props.className,\n      maxCount = props.maxCount,\n      _props$renderRest = props.renderRest,\n      renderRest = _props$renderRest === void 0 ? defaultRenderRest : _props$renderRest,\n      suffix = props.suffix;\n  var createUseState = useBatchFrameState();\n\n  var _createUseState = createUseState(0),\n      _createUseState2 = _slicedToArray(_createUseState, 2),\n      containerWidth = _createUseState2[0],\n      setContainerWidth = _createUseState2[1];\n\n  var _createUseState3 = createUseState(new Map()),\n      _createUseState4 = _slicedToArray(_createUseState3, 2),\n      itemWidths = _createUseState4[0],\n      setItemWidths = _createUseState4[1];\n\n  var _createUseState5 = createUseState(0),\n      _createUseState6 = _slicedToArray(_createUseState5, 2),\n      prevRestWidth = _createUseState6[0],\n      setPrevRestWidth = _createUseState6[1];\n\n  var _createUseState7 = createUseState(0),\n      _createUseState8 = _slicedToArray(_createUseState7, 2),\n      restWidth = _createUseState8[0],\n      setRestWidth = _createUseState8[1];\n\n  var _createUseState9 = createUseState(0),\n      _createUseState10 = _slicedToArray(_createUseState9, 2),\n      suffixWidth = _createUseState10[0],\n      setSuffixWidth = _createUseState10[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      suffixFixedStart = _useState2[0],\n      setSuffixFixedStart = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayCount = _useState4[0],\n      setDisplayCount = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      restReady = _useState6[0],\n      setRestReady = _useState6[1];\n\n  var itemPrefixCls = \"\".concat(prefixCls, \"-item\"); // Always use the max width to avoid blink\n\n  var mergedRestWidth = Math.max(prevRestWidth, restWidth); // ================================= Data =================================\n\n  var isResponsive = data.length && maxCount === RESPONSIVE;\n  /**\n   * When is `responsive`, we will always render rest node to get the real width of it for calculation\n   */\n\n  var showRest = isResponsive || typeof maxCount === 'number' && data.length > maxCount;\n  var mergedData = useMemo(function () {\n    var items = data;\n\n    if (isResponsive) {\n      items = data.slice(0, Math.min(data.length, containerWidth / itemWidth));\n    } else if (typeof maxCount === 'number') {\n      items = data.slice(0, maxCount);\n    }\n\n    return items;\n  }, [data, itemWidth, containerWidth, maxCount, isResponsive]);\n  var omittedItems = useMemo(function () {\n    if (isResponsive) {\n      return data.slice(displayCount + 1);\n    }\n\n    return data.slice(mergedData.length);\n  }, [data, mergedData, isResponsive, displayCount]); // ================================= Item =================================\n\n  var getKey = useCallback(function (item, index) {\n    var _ref;\n\n    if (typeof itemKey === 'function') {\n      return itemKey(item);\n    }\n\n    return (_ref = itemKey && (item === null || item === void 0 ? void 0 : item[itemKey])) !== null && _ref !== void 0 ? _ref : index;\n  }, [itemKey]);\n  var mergedRenderItem = useCallback(renderItem || function (item) {\n    return item;\n  }, [renderItem]);\n\n  function updateDisplayCount(count, notReady) {\n    setDisplayCount(count);\n\n    if (!notReady) {\n      setRestReady(count < data.length - 1);\n    }\n  } // ================================= Size =================================\n\n\n  function onOverflowResize(_, element) {\n    setContainerWidth(element.clientWidth);\n  }\n\n  function registerSize(key, width) {\n    setItemWidths(function (origin) {\n      var clone = new Map(origin);\n\n      if (width === null) {\n        clone.delete(key);\n      } else {\n        clone.set(key, width);\n      }\n\n      return clone;\n    });\n  }\n\n  function registerOverflowSize(_, width) {\n    setRestWidth(width);\n    setPrevRestWidth(restWidth);\n  }\n\n  function registerSuffixSize(_, width) {\n    setSuffixWidth(width);\n  } // ================================ Effect ================================\n\n\n  function getItemWidth(index) {\n    return itemWidths.get(getKey(mergedData[index], index));\n  }\n\n  React.useLayoutEffect(function () {\n    if (containerWidth && mergedRestWidth && mergedData) {\n      var totalWidth = suffixWidth;\n      var len = mergedData.length;\n      var lastIndex = len - 1; // When data count change to 0, reset this since not loop will reach\n\n      if (!len) {\n        updateDisplayCount(0);\n        setSuffixFixedStart(null);\n        return;\n      }\n\n      for (var i = 0; i < len; i += 1) {\n        var currentItemWidth = getItemWidth(i); // Break since data not ready\n\n        if (currentItemWidth === undefined) {\n          updateDisplayCount(i - 1, true);\n          break;\n        } // Find best match\n\n\n        totalWidth += currentItemWidth;\n\n        if (i === lastIndex - 1 && totalWidth + getItemWidth(lastIndex) <= containerWidth) {\n          // Additional check if match the end\n          updateDisplayCount(lastIndex);\n          setSuffixFixedStart(null);\n          break;\n        } else if (totalWidth + mergedRestWidth > containerWidth) {\n          // Can not hold all the content to show rest\n          updateDisplayCount(i - 1);\n          setSuffixFixedStart(totalWidth - currentItemWidth - suffixWidth + restWidth);\n          break;\n        } else if (i === lastIndex) {\n          // Reach the end\n          updateDisplayCount(lastIndex);\n          setSuffixFixedStart(totalWidth - suffixWidth);\n          break;\n        }\n      }\n\n      if (suffix && getItemWidth(0) + suffixWidth > containerWidth) {\n        setSuffixFixedStart(null);\n      }\n    }\n  }, [containerWidth, itemWidths, restWidth, suffixWidth, getKey, mergedData]); // ================================ Render ================================\n\n  var displayRest = restReady && !!omittedItems.length;\n  var suffixStyle = {};\n\n  if (suffixFixedStart !== null && isResponsive) {\n    suffixStyle = {\n      position: 'absolute',\n      left: suffixFixedStart,\n      top: 0\n    };\n  }\n\n  var itemSharedProps = {\n    prefixCls: itemPrefixCls,\n    responsive: isResponsive\n  };\n  var overflowNode = /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(prefixCls, className),\n    style: style,\n    ref: ref\n  }, mergedData.map(function (item, index) {\n    var key = getKey(item, index);\n    return /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, {\n      order: index,\n      key: key,\n      item: item,\n      renderItem: mergedRenderItem,\n      itemKey: key,\n      registerSize: registerSize,\n      display: index <= displayCount\n    }));\n  }), showRest ? /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, {\n    // When not show, order should be the last\n    order: displayRest ? displayCount : Number.MAX_SAFE_INTEGER,\n    className: \"\".concat(itemPrefixCls, \"-rest\"),\n    registerSize: registerOverflowSize,\n    display: displayRest\n  }), typeof renderRest === 'function' ? renderRest(omittedItems) : renderRest) : null, suffix && /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, {\n    order: displayCount,\n    className: \"\".concat(itemPrefixCls, \"-suffix\"),\n    registerSize: registerSuffixSize,\n    display: true,\n    style: suffixStyle\n  }), suffix));\n\n  if (isResponsive) {\n    overflowNode = /*#__PURE__*/React.createElement(ResizeObserver, {\n      onResize: onOverflowResize\n    }, overflowNode);\n  }\n\n  return overflowNode;\n}\n\nvar ForwardOverflow = /*#__PURE__*/React.forwardRef(Overflow);\nForwardOverflow.displayName = 'Overflow'; // Convert to generic type\n\nexport default ForwardOverflow;","map":{"version":3,"sources":["/Users/youn/Documents/younFolder/Demo/react-electron-pc/node_modules/rc-overflow/es/Overflow.js"],"names":["_extends","_slicedToArray","React","useState","useMemo","useCallback","classNames","ResizeObserver","Item","useBatchFrameState","RESPONSIVE","defaultRenderRest","omittedItems","concat","length","Overflow","props","ref","_props$prefixCls","prefixCls","_props$data","data","renderItem","itemKey","_props$itemWidth","itemWidth","style","className","maxCount","_props$renderRest","renderRest","suffix","createUseState","_createUseState","_createUseState2","containerWidth","setContainerWidth","_createUseState3","Map","_createUseState4","itemWidths","setItemWidths","_createUseState5","_createUseState6","prevRestWidth","setPrevRestWidth","_createUseState7","_createUseState8","restWidth","setRestWidth","_createUseState9","_createUseState10","suffixWidth","setSuffixWidth","_useState","_useState2","suffixFixedStart","setSuffixFixedStart","_useState3","_useState4","displayCount","setDisplayCount","_useState5","_useState6","restReady","setRestReady","itemPrefixCls","mergedRestWidth","Math","max","isResponsive","showRest","mergedData","items","slice","min","getKey","item","index","_ref","mergedRenderItem","updateDisplayCount","count","notReady","onOverflowResize","_","element","clientWidth","registerSize","key","width","origin","clone","delete","set","registerOverflowSize","registerSuffixSize","getItemWidth","get","useLayoutEffect","totalWidth","len","lastIndex","i","currentItemWidth","undefined","displayRest","suffixStyle","position","left","top","itemSharedProps","responsive","overflowNode","createElement","map","order","display","Number","MAX_SAFE_INTEGER","onResize","ForwardOverflow","forwardRef","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useState, useMemo, useCallback } from 'react';\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport Item from './Item';\nimport { useBatchFrameState } from './hooks/useBatchFrameState';\nvar RESPONSIVE = 'responsive';\n\nfunction defaultRenderRest(omittedItems) {\n  return \"+ \".concat(omittedItems.length, \" ...\");\n}\n\nfunction Overflow(props, ref) {\n  var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-overflow' : _props$prefixCls,\n      _props$data = props.data,\n      data = _props$data === void 0 ? [] : _props$data,\n      renderItem = props.renderItem,\n      itemKey = props.itemKey,\n      _props$itemWidth = props.itemWidth,\n      itemWidth = _props$itemWidth === void 0 ? 10 : _props$itemWidth,\n      style = props.style,\n      className = props.className,\n      maxCount = props.maxCount,\n      _props$renderRest = props.renderRest,\n      renderRest = _props$renderRest === void 0 ? defaultRenderRest : _props$renderRest,\n      suffix = props.suffix;\n  var createUseState = useBatchFrameState();\n\n  var _createUseState = createUseState(0),\n      _createUseState2 = _slicedToArray(_createUseState, 2),\n      containerWidth = _createUseState2[0],\n      setContainerWidth = _createUseState2[1];\n\n  var _createUseState3 = createUseState(new Map()),\n      _createUseState4 = _slicedToArray(_createUseState3, 2),\n      itemWidths = _createUseState4[0],\n      setItemWidths = _createUseState4[1];\n\n  var _createUseState5 = createUseState(0),\n      _createUseState6 = _slicedToArray(_createUseState5, 2),\n      prevRestWidth = _createUseState6[0],\n      setPrevRestWidth = _createUseState6[1];\n\n  var _createUseState7 = createUseState(0),\n      _createUseState8 = _slicedToArray(_createUseState7, 2),\n      restWidth = _createUseState8[0],\n      setRestWidth = _createUseState8[1];\n\n  var _createUseState9 = createUseState(0),\n      _createUseState10 = _slicedToArray(_createUseState9, 2),\n      suffixWidth = _createUseState10[0],\n      setSuffixWidth = _createUseState10[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      suffixFixedStart = _useState2[0],\n      setSuffixFixedStart = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayCount = _useState4[0],\n      setDisplayCount = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      restReady = _useState6[0],\n      setRestReady = _useState6[1];\n\n  var itemPrefixCls = \"\".concat(prefixCls, \"-item\"); // Always use the max width to avoid blink\n\n  var mergedRestWidth = Math.max(prevRestWidth, restWidth); // ================================= Data =================================\n\n  var isResponsive = data.length && maxCount === RESPONSIVE;\n  /**\n   * When is `responsive`, we will always render rest node to get the real width of it for calculation\n   */\n\n  var showRest = isResponsive || typeof maxCount === 'number' && data.length > maxCount;\n  var mergedData = useMemo(function () {\n    var items = data;\n\n    if (isResponsive) {\n      items = data.slice(0, Math.min(data.length, containerWidth / itemWidth));\n    } else if (typeof maxCount === 'number') {\n      items = data.slice(0, maxCount);\n    }\n\n    return items;\n  }, [data, itemWidth, containerWidth, maxCount, isResponsive]);\n  var omittedItems = useMemo(function () {\n    if (isResponsive) {\n      return data.slice(displayCount + 1);\n    }\n\n    return data.slice(mergedData.length);\n  }, [data, mergedData, isResponsive, displayCount]); // ================================= Item =================================\n\n  var getKey = useCallback(function (item, index) {\n    var _ref;\n\n    if (typeof itemKey === 'function') {\n      return itemKey(item);\n    }\n\n    return (_ref = itemKey && (item === null || item === void 0 ? void 0 : item[itemKey])) !== null && _ref !== void 0 ? _ref : index;\n  }, [itemKey]);\n  var mergedRenderItem = useCallback(renderItem || function (item) {\n    return item;\n  }, [renderItem]);\n\n  function updateDisplayCount(count, notReady) {\n    setDisplayCount(count);\n\n    if (!notReady) {\n      setRestReady(count < data.length - 1);\n    }\n  } // ================================= Size =================================\n\n\n  function onOverflowResize(_, element) {\n    setContainerWidth(element.clientWidth);\n  }\n\n  function registerSize(key, width) {\n    setItemWidths(function (origin) {\n      var clone = new Map(origin);\n\n      if (width === null) {\n        clone.delete(key);\n      } else {\n        clone.set(key, width);\n      }\n\n      return clone;\n    });\n  }\n\n  function registerOverflowSize(_, width) {\n    setRestWidth(width);\n    setPrevRestWidth(restWidth);\n  }\n\n  function registerSuffixSize(_, width) {\n    setSuffixWidth(width);\n  } // ================================ Effect ================================\n\n\n  function getItemWidth(index) {\n    return itemWidths.get(getKey(mergedData[index], index));\n  }\n\n  React.useLayoutEffect(function () {\n    if (containerWidth && mergedRestWidth && mergedData) {\n      var totalWidth = suffixWidth;\n      var len = mergedData.length;\n      var lastIndex = len - 1; // When data count change to 0, reset this since not loop will reach\n\n      if (!len) {\n        updateDisplayCount(0);\n        setSuffixFixedStart(null);\n        return;\n      }\n\n      for (var i = 0; i < len; i += 1) {\n        var currentItemWidth = getItemWidth(i); // Break since data not ready\n\n        if (currentItemWidth === undefined) {\n          updateDisplayCount(i - 1, true);\n          break;\n        } // Find best match\n\n\n        totalWidth += currentItemWidth;\n\n        if (i === lastIndex - 1 && totalWidth + getItemWidth(lastIndex) <= containerWidth) {\n          // Additional check if match the end\n          updateDisplayCount(lastIndex);\n          setSuffixFixedStart(null);\n          break;\n        } else if (totalWidth + mergedRestWidth > containerWidth) {\n          // Can not hold all the content to show rest\n          updateDisplayCount(i - 1);\n          setSuffixFixedStart(totalWidth - currentItemWidth - suffixWidth + restWidth);\n          break;\n        } else if (i === lastIndex) {\n          // Reach the end\n          updateDisplayCount(lastIndex);\n          setSuffixFixedStart(totalWidth - suffixWidth);\n          break;\n        }\n      }\n\n      if (suffix && getItemWidth(0) + suffixWidth > containerWidth) {\n        setSuffixFixedStart(null);\n      }\n    }\n  }, [containerWidth, itemWidths, restWidth, suffixWidth, getKey, mergedData]); // ================================ Render ================================\n\n  var displayRest = restReady && !!omittedItems.length;\n  var suffixStyle = {};\n\n  if (suffixFixedStart !== null && isResponsive) {\n    suffixStyle = {\n      position: 'absolute',\n      left: suffixFixedStart,\n      top: 0\n    };\n  }\n\n  var itemSharedProps = {\n    prefixCls: itemPrefixCls,\n    responsive: isResponsive\n  };\n  var overflowNode = /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(prefixCls, className),\n    style: style,\n    ref: ref\n  }, mergedData.map(function (item, index) {\n    var key = getKey(item, index);\n    return /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, {\n      order: index,\n      key: key,\n      item: item,\n      renderItem: mergedRenderItem,\n      itemKey: key,\n      registerSize: registerSize,\n      display: index <= displayCount\n    }));\n  }), showRest ? /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, {\n    // When not show, order should be the last\n    order: displayRest ? displayCount : Number.MAX_SAFE_INTEGER,\n    className: \"\".concat(itemPrefixCls, \"-rest\"),\n    registerSize: registerOverflowSize,\n    display: displayRest\n  }), typeof renderRest === 'function' ? renderRest(omittedItems) : renderRest) : null, suffix && /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, {\n    order: displayCount,\n    className: \"\".concat(itemPrefixCls, \"-suffix\"),\n    registerSize: registerSuffixSize,\n    display: true,\n    style: suffixStyle\n  }), suffix));\n\n  if (isResponsive) {\n    overflowNode = /*#__PURE__*/React.createElement(ResizeObserver, {\n      onResize: onOverflowResize\n    }, overflowNode);\n  }\n\n  return overflowNode;\n}\n\nvar ForwardOverflow = /*#__PURE__*/React.forwardRef(Overflow);\nForwardOverflow.displayName = 'Overflow'; // Convert to generic type\n\nexport default ForwardOverflow;"]},"metadata":{},"sourceType":"module"}