{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\n/* eslint-disable react/prop-types */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport CollapsePanel from './Panel';\n\nfunction getActiveKeysArray(activeKey) {\n  var currentActiveKey = activeKey;\n\n  if (!Array.isArray(currentActiveKey)) {\n    currentActiveKey = currentActiveKey ? [currentActiveKey] : [];\n  }\n\n  return currentActiveKey.map(function (key) {\n    return String(key);\n  });\n}\n\nvar Collapse = /*#__PURE__*/function (_React$Component) {\n  _inherits(Collapse, _React$Component);\n\n  var _super = _createSuper(Collapse);\n\n  function Collapse(props) {\n    var _this;\n\n    _classCallCheck(this, Collapse);\n\n    _this = _super.call(this, props);\n\n    _this.onClickItem = function (key) {\n      var activeKey = _this.state.activeKey;\n\n      if (_this.props.accordion) {\n        activeKey = activeKey[0] === key ? [] : [key];\n      } else {\n        activeKey = _toConsumableArray(activeKey);\n        var index = activeKey.indexOf(key);\n        var isActive = index > -1;\n\n        if (isActive) {\n          // remove active state\n          activeKey.splice(index, 1);\n        } else {\n          activeKey.push(key);\n        }\n      }\n\n      _this.setActiveKey(activeKey);\n    };\n\n    _this.getNewChild = function (child, index) {\n      if (!child) return null;\n      var activeKey = _this.state.activeKey;\n      var _this$props = _this.props,\n          prefixCls = _this$props.prefixCls,\n          openMotion = _this$props.openMotion,\n          accordion = _this$props.accordion,\n          rootDestroyInactivePanel = _this$props.destroyInactivePanel,\n          expandIcon = _this$props.expandIcon,\n          collapsible = _this$props.collapsible; // If there is no key provide, use the panel order as default key\n\n      var key = child.key || String(index);\n      var _child$props = child.props,\n          header = _child$props.header,\n          headerClass = _child$props.headerClass,\n          destroyInactivePanel = _child$props.destroyInactivePanel,\n          childCollapsible = _child$props.collapsible;\n      var isActive = false;\n\n      if (accordion) {\n        isActive = activeKey[0] === key;\n      } else {\n        isActive = activeKey.indexOf(key) > -1;\n      }\n\n      var mergeCollapsible = childCollapsible !== null && childCollapsible !== void 0 ? childCollapsible : collapsible;\n      var props = {\n        key: key,\n        panelKey: key,\n        header: header,\n        headerClass: headerClass,\n        isActive: isActive,\n        prefixCls: prefixCls,\n        destroyInactivePanel: destroyInactivePanel !== null && destroyInactivePanel !== void 0 ? destroyInactivePanel : rootDestroyInactivePanel,\n        openMotion: openMotion,\n        accordion: accordion,\n        children: child.props.children,\n        onItemClick: mergeCollapsible === 'disabled' ? null : _this.onClickItem,\n        expandIcon: expandIcon,\n        collapsible: mergeCollapsible\n      }; // https://github.com/ant-design/ant-design/issues/20479\n\n      if (typeof child.type === 'string') {\n        return child;\n      }\n\n      return React.cloneElement(child, props);\n    };\n\n    _this.getItems = function () {\n      var children = _this.props.children;\n      return toArray(children).map(_this.getNewChild);\n    };\n\n    _this.setActiveKey = function (activeKey) {\n      if (!('activeKey' in _this.props)) {\n        _this.setState({\n          activeKey: activeKey\n        });\n      }\n\n      _this.props.onChange(_this.props.accordion ? activeKey[0] : activeKey);\n    };\n\n    var activeKey = props.activeKey,\n        defaultActiveKey = props.defaultActiveKey;\n    var currentActiveKey = defaultActiveKey;\n\n    if ('activeKey' in props) {\n      currentActiveKey = activeKey;\n    }\n\n    _this.state = {\n      activeKey: getActiveKeysArray(currentActiveKey)\n    };\n    return _this;\n  }\n\n  _createClass(Collapse, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$props2 = this.props,\n          prefixCls = _this$props2.prefixCls,\n          className = _this$props2.className,\n          style = _this$props2.style,\n          accordion = _this$props2.accordion;\n      var collapseClassName = classNames((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, className, !!className), _classNames));\n      return React.createElement(\"div\", {\n        className: collapseClassName,\n        style: style,\n        role: accordion ? 'tablist' : null\n      }, this.getItems());\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var newState = {};\n\n      if ('activeKey' in nextProps) {\n        newState.activeKey = getActiveKeysArray(nextProps.activeKey);\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Collapse;\n}(React.Component);\n\nCollapse.defaultProps = {\n  prefixCls: 'rc-collapse',\n  onChange: function onChange() {},\n  accordion: false,\n  destroyInactivePanel: false\n};\nCollapse.Panel = CollapsePanel;\nexport default Collapse;","map":{"version":3,"sources":["/Users/youn/Documents/younFolder/Demo/react-electron-pc/node_modules/rc-collapse/es/Collapse.js"],"names":["_defineProperty","_toConsumableArray","_classCallCheck","_createClass","_inherits","_createSuper","React","classNames","shallowEqual","toArray","CollapsePanel","getActiveKeysArray","activeKey","currentActiveKey","Array","isArray","map","key","String","Collapse","_React$Component","_super","props","_this","call","onClickItem","state","accordion","index","indexOf","isActive","splice","push","setActiveKey","getNewChild","child","_this$props","prefixCls","openMotion","rootDestroyInactivePanel","destroyInactivePanel","expandIcon","collapsible","_child$props","header","headerClass","childCollapsible","mergeCollapsible","panelKey","children","onItemClick","type","cloneElement","getItems","setState","onChange","defaultActiveKey","value","shouldComponentUpdate","nextProps","nextState","render","_classNames","_this$props2","className","style","collapseClassName","createElement","role","getDerivedStateFromProps","newState","Component","defaultProps","Panel"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\n\n/* eslint-disable react/prop-types */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport CollapsePanel from './Panel';\n\nfunction getActiveKeysArray(activeKey) {\n  var currentActiveKey = activeKey;\n\n  if (!Array.isArray(currentActiveKey)) {\n    currentActiveKey = currentActiveKey ? [currentActiveKey] : [];\n  }\n\n  return currentActiveKey.map(function (key) {\n    return String(key);\n  });\n}\n\nvar Collapse = /*#__PURE__*/function (_React$Component) {\n  _inherits(Collapse, _React$Component);\n\n  var _super = _createSuper(Collapse);\n\n  function Collapse(props) {\n    var _this;\n\n    _classCallCheck(this, Collapse);\n\n    _this = _super.call(this, props);\n\n    _this.onClickItem = function (key) {\n      var activeKey = _this.state.activeKey;\n\n      if (_this.props.accordion) {\n        activeKey = activeKey[0] === key ? [] : [key];\n      } else {\n        activeKey = _toConsumableArray(activeKey);\n        var index = activeKey.indexOf(key);\n        var isActive = index > -1;\n\n        if (isActive) {\n          // remove active state\n          activeKey.splice(index, 1);\n        } else {\n          activeKey.push(key);\n        }\n      }\n\n      _this.setActiveKey(activeKey);\n    };\n\n    _this.getNewChild = function (child, index) {\n      if (!child) return null;\n      var activeKey = _this.state.activeKey;\n      var _this$props = _this.props,\n          prefixCls = _this$props.prefixCls,\n          openMotion = _this$props.openMotion,\n          accordion = _this$props.accordion,\n          rootDestroyInactivePanel = _this$props.destroyInactivePanel,\n          expandIcon = _this$props.expandIcon,\n          collapsible = _this$props.collapsible; // If there is no key provide, use the panel order as default key\n\n      var key = child.key || String(index);\n      var _child$props = child.props,\n          header = _child$props.header,\n          headerClass = _child$props.headerClass,\n          destroyInactivePanel = _child$props.destroyInactivePanel,\n          childCollapsible = _child$props.collapsible;\n      var isActive = false;\n\n      if (accordion) {\n        isActive = activeKey[0] === key;\n      } else {\n        isActive = activeKey.indexOf(key) > -1;\n      }\n\n      var mergeCollapsible = childCollapsible !== null && childCollapsible !== void 0 ? childCollapsible : collapsible;\n      var props = {\n        key: key,\n        panelKey: key,\n        header: header,\n        headerClass: headerClass,\n        isActive: isActive,\n        prefixCls: prefixCls,\n        destroyInactivePanel: destroyInactivePanel !== null && destroyInactivePanel !== void 0 ? destroyInactivePanel : rootDestroyInactivePanel,\n        openMotion: openMotion,\n        accordion: accordion,\n        children: child.props.children,\n        onItemClick: mergeCollapsible === 'disabled' ? null : _this.onClickItem,\n        expandIcon: expandIcon,\n        collapsible: mergeCollapsible\n      }; // https://github.com/ant-design/ant-design/issues/20479\n\n      if (typeof child.type === 'string') {\n        return child;\n      }\n\n      return React.cloneElement(child, props);\n    };\n\n    _this.getItems = function () {\n      var children = _this.props.children;\n      return toArray(children).map(_this.getNewChild);\n    };\n\n    _this.setActiveKey = function (activeKey) {\n      if (!('activeKey' in _this.props)) {\n        _this.setState({\n          activeKey: activeKey\n        });\n      }\n\n      _this.props.onChange(_this.props.accordion ? activeKey[0] : activeKey);\n    };\n\n    var activeKey = props.activeKey,\n        defaultActiveKey = props.defaultActiveKey;\n    var currentActiveKey = defaultActiveKey;\n\n    if ('activeKey' in props) {\n      currentActiveKey = activeKey;\n    }\n\n    _this.state = {\n      activeKey: getActiveKeysArray(currentActiveKey)\n    };\n    return _this;\n  }\n\n  _createClass(Collapse, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$props2 = this.props,\n          prefixCls = _this$props2.prefixCls,\n          className = _this$props2.className,\n          style = _this$props2.style,\n          accordion = _this$props2.accordion;\n      var collapseClassName = classNames((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, className, !!className), _classNames));\n      return React.createElement(\"div\", {\n        className: collapseClassName,\n        style: style,\n        role: accordion ? 'tablist' : null\n      }, this.getItems());\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var newState = {};\n\n      if ('activeKey' in nextProps) {\n        newState.activeKey = getActiveKeysArray(nextProps.activeKey);\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Collapse;\n}(React.Component);\n\nCollapse.defaultProps = {\n  prefixCls: 'rc-collapse',\n  onChange: function onChange() {},\n  accordion: false,\n  destroyInactivePanel: false\n};\nCollapse.Panel = CollapsePanel;\nexport default Collapse;"]},"metadata":{},"sourceType":"module"}