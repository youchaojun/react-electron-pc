{"ast":null,"code":"import { themeList } from './basic';\n/**\n * 当前设置颜色过滤\n * @param color primary' | 'primaryS 主题颜色和副标题颜色\n * 返回一个十六进制颜色字符串\n */\n\nexport const currentThemeColor = color => {\n  const themeCount = localStorage.getItem('themeCount');\n  const count = themeCount ? Number(themeCount) : 0;\n  return color === 'primary' ? themeList[count]['@btn-primary-bg'] : themeList[count]['@secondary-color'];\n};\n/**\n * 过滤主背景色\n * @param type primary' | 'primaryS 主题颜色和副标题颜色\n * 返回React CSS背景颜色样式\n */\n\nexport const currentThemeBG = type => {\n  return {\n    backgroundColor: currentThemeColor(type),\n    color: '#fff'\n  };\n};\n/**\n * 过滤主背景色\n * @param type primary' | 'primaryS 主题颜色和副标题颜色\n * 返回React CSS字体颜色样式\n */\n\nexport const currentThemeC = type => {\n  return {\n    color: currentThemeColor(type)\n  };\n};\n/**\n * 构建联动菜单\n * @param tree 传入过滤的树结构\n */\n\nexport const renderTree = tree => tree.map(value => {\n  value.value = value.id;\n  value.label = value.name;\n\n  if (value.children) {\n    renderTree(value.children);\n  }\n\n  return value;\n}); // 置灰按钮 不能点击\n\nexport const styleBtn = {\n  cursor: 'not-allowed',\n  pointerEvents: 'none',\n  color: '#a7a5a5'\n}; // number---->boolean\n\nexport const stringConvertBoolean = val => {\n  if (val === 2) {\n    return null;\n  }\n\n  return Boolean(val);\n}; // boolean---->number\n\nexport const booleanConvertString = val => {\n  if (val === null) {\n    return 2;\n  }\n\n  return Number(val);\n}; // json转formData\n\nexport const jsonToFromData = json => {\n  let formData = new FormData();\n\n  for (let key in json) {\n    if (key === 'file') {\n      if (json.file.length > 1) {\n        for (let val of json.file) {\n          formData.append('file', val);\n        }\n      } else {\n        formData.append('file', json.file);\n      }\n    } else {\n      formData.append(key, json[key]);\n    }\n  }\n\n  return formData;\n}; // 生成UUID\n\nexport const uuid = () => {\n  let s = [],\n      hexDigits = '0123456789abcdef';\n\n  for (let i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n  }\n\n  s[14] = '4';\n  s[19] = hexDigits.substr(s[19] & 0x3 | 0x8, 1); // eslint-disable-next-line no-multi-assign\n\n  s[8] = s[13] = s[18] = s[23] = '-';\n  const uuid = s.join('');\n  return uuid;\n};\nexport const loginFixedParam = {\n  client_id: 'android_v1',\n  client_secret: 'android_v1_secret'\n};\n/**\n * 过滤undefined和空字符串的字段\n * @param obj 传入的参数\n */\n\nexport function filterUndefined(obj) {\n  for (let key in obj) {\n    if (obj[key] === undefined || obj[key] === '') {\n      delete obj[key];\n    }\n  }\n\n  return obj;\n}","map":{"version":3,"sources":["/Users/youn/Documents/younFolder/Demo/react-electron-pc/src/utils/common.ts"],"names":["themeList","currentThemeColor","color","themeCount","localStorage","getItem","count","Number","currentThemeBG","type","backgroundColor","currentThemeC","renderTree","tree","map","value","id","label","name","children","styleBtn","cursor","pointerEvents","stringConvertBoolean","val","Boolean","booleanConvertString","jsonToFromData","json","formData","FormData","key","file","length","append","uuid","s","hexDigits","i","substr","Math","floor","random","join","loginFixedParam","client_id","client_secret","filterUndefined","obj","undefined"],"mappings":"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","sourcesContent":["import { StringKey } from '@/typings/common';\nimport { OrgIF } from '@/typings/login';\nimport { CSSProperties } from 'react';\nimport { themeList } from './basic';\n\n/**\n * 当前设置颜色过滤\n * @param color primary' | 'primaryS 主题颜色和副标题颜色\n * 返回一个十六进制颜色字符串\n */\nexport const currentThemeColor = (color: 'primary' | 'primaryS'): string => {\n  const themeCount = localStorage.getItem('themeCount');\n  const count = themeCount ? Number(themeCount) : 0;\n\n  return color === 'primary'\n    ? themeList[count]['@btn-primary-bg']\n    : themeList[count]['@secondary-color'];\n};\n/**\n * 过滤主背景色\n * @param type primary' | 'primaryS 主题颜色和副标题颜色\n * 返回React CSS背景颜色样式\n */\nexport const currentThemeBG = (type: 'primary' | 'primaryS'): CSSProperties => {\n  return { backgroundColor: currentThemeColor(type), color: '#fff' };\n};\n/**\n * 过滤主背景色\n * @param type primary' | 'primaryS 主题颜色和副标题颜色\n * 返回React CSS字体颜色样式\n */\nexport const currentThemeC = (type: 'primary' | 'primaryS'): CSSProperties => {\n  return { color: currentThemeColor(type) };\n};\n/**\n * 构建联动菜单\n * @param tree 传入过滤的树结构\n */\ninterface TreeRenderIF extends OrgIF {\n  value?: number;\n  label?: string;\n}\nexport const renderTree = (tree: TreeRenderIF[]): TreeRenderIF[] =>\n  tree.map(\n    (value: TreeRenderIF): TreeRenderIF => {\n      value.value = value.id;\n      value.label = value.name;\n      if (value.children) {\n        renderTree(value.children);\n      }\n      return value;\n    }\n  );\n// 置灰按钮 不能点击\nexport const styleBtn: CSSProperties = {\n  cursor: 'not-allowed',\n  pointerEvents: 'none',\n  color: '#a7a5a5',\n};\n\n// number---->boolean\nexport const stringConvertBoolean = (val: number): boolean | null => {\n  if (val === 2) {\n    return null;\n  }\n  return Boolean(val);\n};\n\n// boolean---->number\nexport const booleanConvertString = (val: boolean | undefined | null): number => {\n  if (val === null) {\n    return 2;\n  }\n  return Number(val);\n};\n\n// json转formData\nexport const jsonToFromData = (json: StringKey): FormData => {\n  let formData = new FormData();\n  for (let key in json) {\n    if (key === 'file') {\n      if (json.file.length > 1) {\n        for (let val of json.file) {\n          formData.append('file', val);\n        }\n      } else {\n        formData.append('file', json.file);\n      }\n    } else {\n      formData.append(key, json[key]);\n    }\n  }\n  return formData;\n};\n\n// 生成UUID\nexport const uuid = (): string => {\n  let s: any[] = [],\n    hexDigits = '0123456789abcdef';\n\n  for (let i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n  }\n  s[14] = '4';\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);\n\n  // eslint-disable-next-line no-multi-assign\n  s[8] = s[13] = s[18] = s[23] = '-';\n  const uuid = s.join('');\n  return uuid;\n};\nexport const loginFixedParam = {\n  client_id: 'android_v1',\n  client_secret: 'android_v1_secret',\n};\n\n/**\n * 过滤undefined和空字符串的字段\n * @param obj 传入的参数\n */\nexport function filterUndefined<T extends StringKey>(obj: T): T {\n  for (let key in obj) {\n    if (obj[key] === undefined || obj[key] === '') {\n      delete obj[key];\n    }\n  }\n  return obj;\n}\n"]},"metadata":{},"sourceType":"module"}