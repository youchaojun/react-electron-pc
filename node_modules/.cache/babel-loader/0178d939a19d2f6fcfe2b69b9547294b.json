{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/youn/Documents/younFolder/Demo/react-electron-pc/src/layouts/Content.tsx\";\nimport React from 'react';\nimport { Modal } from 'antd';\nimport { ipcRenderer, isElectron } from '@/utils';\nimport { ErrorBoundary } from '@/components';\nlet timer; // 设置两小时未操作则需要重新登录\n\nlet second = 7200;\nwindow.addEventListener('mousemove', () => {\n  if (second > 0) {\n    second = 7200;\n  }\n});\n\nconst Content = ({\n  component: Component,\n  history\n}) => {\n  if (!timer) {\n    timer = setInterval(() => {\n      second--;\n\n      if (second < 0) {\n        clearInterval(timer);\n        warning();\n      }\n    }, 1000);\n  }\n\n  function warning() {\n    Modal.error({\n      content: '由于您长时间未操作，请重新登录',\n      icon: '',\n      centered: true,\n      okText: '去登录',\n      className: 'user-overtime-action',\n      keyboard: false,\n      width: '280px',\n      onOk: () => {\n        history.push('/');\n\n        if (isElectron) {\n          ipcRenderer.send('login-window');\n        }\n\n        window.location.reload();\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    type: \"inner\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mainContainer\",\n      className: \"main-container\",\n      children: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/youn/Documents/younFolder/Demo/react-electron-pc/src/layouts/Content.tsx"],"names":["React","Modal","ipcRenderer","isElectron","ErrorBoundary","timer","second","window","addEventListener","Content","component","Component","history","setInterval","clearInterval","warning","error","content","icon","centered","okText","className","keyboard","width","onOk","push","send","location","reload"],"mappings":";;AAAA,OAAOA,KAAP,MAAwC,OAAxC;AAEA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,SAAxC;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,IAAIC,KAAJ,C,CACA;;AACA,IAAIC,MAAM,GAAG,IAAb;AAEAC,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqC,MAAM;AACzC,MAAIF,MAAM,GAAG,CAAb,EAAgB;AACdA,IAAAA,MAAM,GAAG,IAAT;AACD;AACF,CAJD;;AAMA,MAAMG,OAA0B,GAAG,CAAC;AAClCC,EAAAA,SAAS,EAAEC,SADuB;AAElCC,EAAAA;AAFkC,CAAD,KAGA;AACjC,MAAI,CAACP,KAAL,EAAY;AACVA,IAAAA,KAAK,GAAGQ,WAAW,CAAC,MAAM;AACxBP,MAAAA,MAAM;;AACN,UAAIA,MAAM,GAAG,CAAb,EAAgB;AACdQ,QAAAA,aAAa,CAACT,KAAD,CAAb;AACAU,QAAAA,OAAO;AACR;AACF,KANkB,EAMhB,IANgB,CAAnB;AAOD;;AACD,WAASA,OAAT,GAAmB;AACjBd,IAAAA,KAAK,CAACe,KAAN,CAAY;AACVC,MAAAA,OAAO,EAAE,iBADC;AAEVC,MAAAA,IAAI,EAAE,EAFI;AAGVC,MAAAA,QAAQ,EAAE,IAHA;AAIVC,MAAAA,MAAM,EAAE,KAJE;AAKVC,MAAAA,SAAS,EAAE,sBALD;AAMVC,MAAAA,QAAQ,EAAE,KANA;AAOVC,MAAAA,KAAK,EAAE,OAPG;AAQVC,MAAAA,IAAI,EAAE,MAAM;AACVZ,QAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;;AACA,YAAItB,UAAJ,EAAgB;AACdD,UAAAA,WAAW,CAACwB,IAAZ,CAAiB,cAAjB;AACD;;AACDnB,QAAAA,MAAM,CAACoB,QAAP,CAAgBC,MAAhB;AACD;AAdS,KAAZ;AAgBD;;AAED,sBACE,QAAC,aAAD;AAAe,IAAA,IAAI,EAAC,OAApB;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,eAAR;AAAwB,MAAA,SAAS,EAAC,gBAAlC;AAAA,6BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAvCD;;KAAMnB,O;AAyCN,eAAeA,OAAf","sourcesContent":["import React, { FC, ReactElement } from 'react';\nimport { RouterPropsIF } from '@/typings/router';\nimport { Modal } from 'antd';\nimport { ipcRenderer, isElectron } from '@/utils';\nimport { ErrorBoundary } from '@/components';\n\nlet timer: ReturnType<typeof setTimeout>;\n// 设置两小时未操作则需要重新登录\nlet second = 7200;\n\nwindow.addEventListener('mousemove', () => {\n  if (second > 0) {\n    second = 7200;\n  }\n});\n\nconst Content: FC<RouterPropsIF> = ({\n  component: Component,\n  history,\n}: RouterPropsIF): ReactElement => {\n  if (!timer) {\n    timer = setInterval(() => {\n      second--;\n      if (second < 0) {\n        clearInterval(timer);\n        warning();\n      }\n    }, 1000);\n  }\n  function warning() {\n    Modal.error({\n      content: '由于您长时间未操作，请重新登录',\n      icon: '',\n      centered: true,\n      okText: '去登录',\n      className: 'user-overtime-action',\n      keyboard: false,\n      width: '280px',\n      onOk: () => {\n        history.push('/');\n        if (isElectron) {\n          ipcRenderer.send('login-window');\n        }\n        window.location.reload();\n      },\n    });\n  }\n\n  return (\n    <ErrorBoundary type=\"inner\">\n      <div id=\"mainContainer\" className=\"main-container\">\n        <Component />\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default Content;\n"]},"metadata":{},"sourceType":"module"}