{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\"; // TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria, getDragChildrenKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\nimport DropIndicator from './DropIndicator';\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    _this = _super.apply(this, arguments);\n    _this.destroyed = false;\n    _this.state = {\n      keyEntities: {},\n      indent: null,\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      dragging: false,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      dropContainerKey: null,\n      dropLevelOffset: null,\n      dropTargetPos: null,\n      dropAllowed: true,\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      listChanging: false,\n      prevProps: null\n    };\n    _this.dragStartMousePosition = null;\n    _this.listRef = /*#__PURE__*/React.createRef();\n\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          keyEntities = _this$state.keyEntities;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      _this.dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n      _this.setState({\n        dragging: true,\n        dragChildrenKeys: getDragChildrenKeys(eventKey, keyEntities),\n        indent: _this.listRef.current.getIndentWidth()\n      });\n\n      _this.setExpandedKeys(newExpandedKeys);\n\n      window.addEventListener('dragend', _this.onWindowDragEnd);\n\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n    /**\n     * [Legacy] Select handler is smaller than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state2 = _this.state,\n          expandedKeys = _this$state2.expandedKeys,\n          keyEntities = _this$state2.keyEntities,\n          dragChildrenKeys = _this$state2.dragChildrenKeys,\n          flattenNodes = _this$state2.flattenNodes,\n          indent = _this$state2.indent;\n      var _this$props = _this.props,\n          onDragEnter = _this$props.onDragEnter,\n          onExpand = _this$props.onExpand,\n          allowDrop = _this$props.allowDrop,\n          direction = _this$props.direction;\n      var pos = node.props.pos;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize.dragNode;\n\n      var _calcDropPosition = calcDropPosition(event, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition.dropPosition,\n          dropLevelOffset = _calcDropPosition.dropLevelOffset,\n          dropTargetKey = _calcDropPosition.dropTargetKey,\n          dropContainerKey = _calcDropPosition.dropContainerKey,\n          dropTargetPos = _calcDropPosition.dropTargetPos,\n          dropAllowed = _calcDropPosition.dropAllowed,\n          dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n\n      if (!dragNode || // don't allow drop inside its children\n      dragChildrenKeys.indexOf(dropTargetKey) !== -1 || // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        _this.setState({\n          dragOverNodeKey: null,\n          dropPosition: null,\n          dropLevelOffset: null,\n          dropTargetKey: null,\n          dropContainerKey: null,\n          dropTargetPos: null,\n          dropAllowed: false\n        });\n\n        return;\n      } // Side effect for delay drag\n\n\n      if (!_this.delayedDragEnterLogic) {\n        _this.delayedDragEnterLogic = {};\n      }\n\n      Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(_this.delayedDragEnterLogic[key]);\n      });\n\n      if (dragNode.props.eventKey !== node.props.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        event.persist();\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (!_this.state.dragging) return;\n\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n          var entity = keyEntities[node.props.eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, node.props.eventKey);\n          }\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setExpandedKeys(newExpandedKeys);\n          }\n\n          if (onExpand) {\n            onExpand(newExpandedKeys, {\n              node: convertNodePropsToEventData(node.props),\n              expanded: true,\n              nativeEvent: event.nativeEvent\n            });\n          }\n        }, 800);\n      } // Skip if drag node is self\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        _this.setState({\n          dragOverNodeKey: null,\n          dropPosition: null,\n          dropLevelOffset: null,\n          dropTargetKey: null,\n          dropContainerKey: null,\n          dropTargetPos: null,\n          dropAllowed: false\n        });\n\n        return;\n      } // Update drag over node and drag state\n\n\n      _this.setState({\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n\n      if (onDragEnter) {\n        onDragEnter({\n          event: event,\n          node: convertNodePropsToEventData(node.props),\n          expandedKeys: expandedKeys\n        });\n      }\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var _this$state3 = _this.state,\n          dragChildrenKeys = _this$state3.dragChildrenKeys,\n          flattenNodes = _this$state3.flattenNodes,\n          keyEntities = _this$state3.keyEntities,\n          expandedKeys = _this$state3.expandedKeys,\n          indent = _this$state3.indent;\n      var _this$props2 = _this.props,\n          onDragOver = _this$props2.onDragOver,\n          allowDrop = _this$props2.allowDrop,\n          direction = _this$props2.direction;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize2.dragNode;\n\n      var _calcDropPosition2 = calcDropPosition(event, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition2.dropPosition,\n          dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n          dropTargetKey = _calcDropPosition2.dropTargetKey,\n          dropContainerKey = _calcDropPosition2.dropContainerKey,\n          dropAllowed = _calcDropPosition2.dropAllowed,\n          dropTargetPos = _calcDropPosition2.dropTargetPos,\n          dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n\n      if (!dragNode || dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed caculated by calcDropPosition\n        return;\n      } // Update drag position\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(_this.state.dropPosition === null && _this.state.dropLevelOffset === null && _this.state.dropTargetKey === null && _this.state.dropContainerKey === null && _this.state.dropTargetPos === null && _this.state.dropAllowed === false && _this.state.dragOverNodeKey === null)) {\n          _this.setState({\n            dropPosition: null,\n            dropLevelOffset: null,\n            dropTargetKey: null,\n            dropContainerKey: null,\n            dropTargetPos: null,\n            dropAllowed: false,\n            dragOverNodeKey: null\n          });\n        }\n      } else if (!(dropPosition === _this.state.dropPosition && dropLevelOffset === _this.state.dropLevelOffset && dropTargetKey === _this.state.dropTargetKey && dropContainerKey === _this.state.dropContainerKey && dropTargetPos === _this.state.dropTargetPos && dropAllowed === _this.state.dropAllowed && dragOverNodeKey === _this.state.dragOverNodeKey)) {\n        _this.setState({\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    }; // since stopPropagation() is called in treeNode\n    // if onWindowDrag is called, whice means state is keeped, drag state should be cleared\n\n\n    _this.onWindowDragEnd = function (event) {\n      _this.onNodeDragEnd(event, null, true);\n\n      window.removeEventListener('dragend', _this.onWindowDragEnd);\n    }; // if onNodeDragEnd is called, onWindowDragEnd won't be called since stopPropagation() is called\n\n\n    _this.onNodeDragEnd = function (event, node) {\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (onDragEnd && !outsideTree) {\n        onDragEnd({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$getActiveItem;\n\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var _this$state4 = _this.state,\n          dragChildrenKeys = _this$state4.dragChildrenKeys,\n          dropPosition = _this$state4.dropPosition,\n          dropTargetKey = _this$state4.dropTargetKey,\n          dropTargetPos = _this$state4.dropTargetPos,\n          dropAllowed = _this$state4.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = _this.props.onDrop;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (dropTargetKey === null) return;\n\n      var abstractDropNodeProps = _objectSpread(_objectSpread({}, getTreeNodeProps(dropTargetKey, _this.getTreeNodeRequiredProps())), {}, {\n        active: ((_this$getActiveItem = _this.getActiveItem()) === null || _this$getActiveItem === void 0 ? void 0 : _this$getActiveItem.data.key) === dropTargetKey,\n        data: _this.state.keyEntities[dropTargetKey].node\n      });\n\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. This is a bug of rc-tree. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n        dragNodesKeys: [_this.dragNode.props.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n\n      if (onDrop && !outsideTree) {\n        onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.cleanDragState = function () {\n      var dragging = _this.state.dragging;\n\n      if (dragging) {\n        _this.setState({\n          dragging: false,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n\n      _this.dragStartMousePosition = null;\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props3 = _this.props,\n          onSelect = _this$props3.onSelect,\n          multiple = _this$props3.multiple;\n      var selected = treeNode.selected,\n          key = treeNode.key;\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = keyEntities[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state5 = _this.state,\n          keyEntities = _this$state5.keyEntities,\n          oriCheckedKeys = _this$state5.checkedKeys,\n          oriHalfCheckedKeys = _this$state5.halfCheckedKeys;\n      var _this$props4 = _this.props,\n          checkStrictly = _this$props4.checkStrictly,\n          onCheck = _this$props4.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return keyEntities[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = keyEntities[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props5 = _this.props,\n              loadData = _this$props5.loadData,\n              onLoad = _this$props5.onLoad;\n          var key = treeNode.key;\n\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            // react 15 will warn if return null\n            return {};\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this$state6 = _this.state,\n                currentLoadedKeys = _this$state6.loadedKeys,\n                currentLoadingKeys = _this$state6.loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n            var newLoadingKeys = arrDel(currentLoadingKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: 'load',\n                node: treeNode\n              });\n            }\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            resolve();\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      });\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      if (onFocus) {\n        onFocus.apply(void 0, arguments);\n      }\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      _this.onActiveChange(null);\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    _this.getTreeNodeRequiredProps = function () {\n      var _this$state7 = _this.state,\n          expandedKeys = _this$state7.expandedKeys,\n          selectedKeys = _this$state7.selectedKeys,\n          loadedKeys = _this$state7.loadedKeys,\n          loadingKeys = _this$state7.loadingKeys,\n          checkedKeys = _this$state7.checkedKeys,\n          halfCheckedKeys = _this$state7.halfCheckedKeys,\n          dragOverNodeKey = _this$state7.dragOverNodeKey,\n          dropPosition = _this$state7.dropPosition,\n          keyEntities = _this$state7.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    }; // =========================== Expanded ===========================\n\n    /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n\n\n    _this.setExpandedKeys = function (expandedKeys) {\n      var treeData = _this.state.treeData;\n      var flattenNodes = flattenTreeData(treeData, expandedKeys);\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var listChanging = _this.state.listChanging;\n      var _this$props6 = _this.props,\n          onExpand = _this$props6.onExpand,\n          loadData = _this$props6.loadData;\n      var key = treeNode.key,\n          expanded = treeNode.expanded; // Do nothing when motion is in progress\n\n      if (listChanging) {\n        return;\n      } // Update selected keys\n\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n\n      _this.setExpandedKeys(expandedKeys);\n\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys);\n\n            _this.setUncontrolledState({\n              flattenNodes: newFlattenTreeData\n            });\n          });\n        }\n      }\n    };\n\n    _this.onListChangeStart = function () {\n      _this.setUncontrolledState({\n        listChanging: true\n      });\n    };\n\n    _this.onListChangeEnd = function () {\n      setTimeout(function () {\n        _this.setUncontrolledState({\n          listChanging: false\n        });\n      });\n    }; // =========================== Keyboard ===========================\n\n\n    _this.onActiveChange = function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var onActiveChange = _this.props.onActiveChange;\n\n      if (activeKey === newActiveKey) {\n        return;\n      }\n\n      _this.setState({\n        activeKey: newActiveKey\n      });\n\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n\n    _this.getActiveItem = function () {\n      var _this$state8 = _this.state,\n          activeKey = _this$state8.activeKey,\n          flattenNodes = _this$state8.flattenNodes;\n\n      if (activeKey === null) {\n        return null;\n      }\n\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.data.key;\n        return key === activeKey;\n      }) || null;\n    };\n\n    _this.offsetActiveKey = function (offset) {\n      var _this$state9 = _this.state,\n          flattenNodes = _this$state9.flattenNodes,\n          activeKey = _this$state9.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.data.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n\n      if (item) {\n        var key = item.data.key;\n\n        _this.onActiveChange(key);\n      } else {\n        _this.onActiveChange(null);\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$state10 = _this.state,\n          activeKey = _this$state10.activeKey,\n          expandedKeys = _this$state10.expandedKeys,\n          checkedKeys = _this$state10.checkedKeys;\n      var _this$props7 = _this.props,\n          onKeyDown = _this$props7.onKeyDown,\n          checkable = _this$props7.checkable,\n          selectable = _this$props7.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var activeItem = _this.getActiveItem();\n\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n          data: activeItem.data,\n          active: true\n        }));\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n    /**\n     * Only update the value which is not in props\n     */\n\n\n    _this.setUncontrolledState = function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (_this.destroyed) {\n        return;\n      }\n\n      var needSync = false;\n      var allPassed = true;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) {\n          allPassed = false;\n          return;\n        }\n\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync && (!atomic || allPassed)) {\n        _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n      }\n    };\n\n    _this.scrollTo = function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('dragend', this.onWindowDragEnd);\n      this.destroyed = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$state11 = this.state,\n          focused = _this$state11.focused,\n          flattenNodes = _this$state11.flattenNodes,\n          keyEntities = _this$state11.keyEntities,\n          dragging = _this$state11.dragging,\n          activeKey = _this$state11.activeKey,\n          dropLevelOffset = _this$state11.dropLevelOffset,\n          dropContainerKey = _this$state11.dropContainerKey,\n          dropTargetKey = _this$state11.dropTargetKey,\n          dropPosition = _this$state11.dropPosition,\n          dragOverNodeKey = _this$state11.dragOverNodeKey,\n          indent = _this$state11.indent;\n      var _this$props8 = this.props,\n          prefixCls = _this$props8.prefixCls,\n          className = _this$props8.className,\n          style = _this$props8.style,\n          showLine = _this$props8.showLine,\n          focusable = _this$props8.focusable,\n          _this$props8$tabIndex = _this$props8.tabIndex,\n          tabIndex = _this$props8$tabIndex === void 0 ? 0 : _this$props8$tabIndex,\n          selectable = _this$props8.selectable,\n          showIcon = _this$props8.showIcon,\n          icon = _this$props8.icon,\n          switcherIcon = _this$props8.switcherIcon,\n          draggable = _this$props8.draggable,\n          checkable = _this$props8.checkable,\n          checkStrictly = _this$props8.checkStrictly,\n          disabled = _this$props8.disabled,\n          motion = _this$props8.motion,\n          loadData = _this$props8.loadData,\n          filterTreeNode = _this$props8.filterTreeNode,\n          height = _this$props8.height,\n          itemHeight = _this$props8.itemHeight,\n          virtual = _this$props8.virtual,\n          titleRender = _this$props8.titleRender,\n          dropIndicatorRender = _this$props8.dropIndicatorRender,\n          onContextMenu = _this$props8.onContextMenu,\n          direction = _this$props8.direction;\n      var domProps = getDataAndAria(this.props);\n      return /*#__PURE__*/React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          indent: indent,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          titleRender: titleRender,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n      }, /*#__PURE__*/React.createElement(NodeList, _extends({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: dragging,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange,\n        onListChangeStart: this.onListChangeStart,\n        onListChangeEnd: this.onListChangeEnd,\n        onContextMenu: onContextMenu\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeData; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData);\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData);\n        }\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  dropIndicatorRender: DropIndicator,\n  allowDrop: function allowDrop() {\n    return true;\n  }\n};\nTree.TreeNode = TreeNode;\nexport default Tree;","map":{"version":3,"sources":["/Users/youn/Documents/younFolder/Demo/react-electron-pc/node_modules/rc-tree/es/Tree.js"],"names":["_extends","_defineProperty","_objectSpread","_toConsumableArray","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","React","KeyCode","warning","classNames","TreeContext","getDataAndAria","getDragChildrenKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","flattenTreeData","convertTreeToData","convertDataToEntities","warningWithoutKey","convertNodePropsToEventData","getTreeNodeProps","NodeList","MOTION_KEY","MotionEntity","TreeNode","conductCheck","DropIndicator","Tree","_React$Component","_super","_this","apply","arguments","destroyed","state","keyEntities","indent","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","expandedKeys","dragging","dragChildrenKeys","dropTargetKey","dropPosition","dropContainerKey","dropLevelOffset","dropTargetPos","dropAllowed","dragOverNodeKey","treeData","flattenNodes","focused","activeKey","listChanging","prevProps","dragStartMousePosition","listRef","createRef","onNodeDragStart","event","node","_this$state","onDragStart","props","eventKey","dragNode","x","clientX","y","clientY","newExpandedKeys","setState","current","getIndentWidth","setExpandedKeys","window","addEventListener","onWindowDragEnd","onNodeDragEnter","_this$state2","_this$props","onDragEnter","onExpand","allowDrop","direction","pos","_assertThisInitialize","_calcDropPosition","indexOf","delayedDragEnterLogic","Object","keys","forEach","key","clearTimeout","persist","setTimeout","entity","children","length","expanded","nativeEvent","onNodeDragOver","_this$state3","_this$props2","onDragOver","_assertThisInitialize2","_calcDropPosition2","onNodeDragLeave","onDragLeave","onNodeDragEnd","removeEventListener","outsideTree","undefined","onDragEnd","cleanDragState","onNodeDrop","_this$getActiveItem","_this$state4","onDrop","abstractDropNodeProps","getTreeNodeRequiredProps","active","getActiveItem","data","dropToChild","posArr","dropResult","dragNodesKeys","concat","dropToGap","Number","onNodeClick","e","treeNode","onClick","onNodeDoubleClick","onDoubleClick","onNodeSelect","_this$props3","onSelect","multiple","selected","targetSelected","selectedNodes","map","selectedKey","filter","setUncontrolledState","onNodeCheck","checked","_this$state5","oriCheckedKeys","oriHalfCheckedKeys","_this$props4","checkStrictly","onCheck","checkedObj","eventObj","halfChecked","checkedNodes","checkedKey","_conductCheck","_checkedKeys","_halfCheckedKeys","keySet","Set","delete","_conductCheck2","Array","from","checkedNodesPositions","push","onNodeLoad","Promise","resolve","_ref","_ref$loadedKeys","_ref$loadingKeys","_this$props5","loadData","onLoad","promise","then","_this$state6","currentLoadedKeys","currentLoadingKeys","newLoadedKeys","newLoadingKeys","onNodeMouseEnter","onMouseEnter","onNodeMouseLeave","onMouseLeave","onNodeContextMenu","onRightClick","preventDefault","onFocus","onBlur","onActiveChange","_this$state7","onNodeExpand","_this$props6","index","targetExpanded","loadPromise","newFlattenTreeData","onListChangeStart","onListChangeEnd","newActiveKey","scrollTo","_this$state8","find","_ref2","offsetActiveKey","offset","_this$state9","findIndex","_ref3","item","onKeyDown","_this$state10","_this$props7","checkable","selectable","which","UP","DOWN","activeItem","treeNodeRequiredProps","expandable","isLeaf","eventNode","LEFT","includes","parent","RIGHT","ENTER","SPACE","disabled","disableCheckbox","atomic","forceState","needSync","allPassed","newState","name","scroll","value","componentWillUnmount","render","_classNames","_this$state11","_this$props8","prefixCls","className","style","showLine","focusable","_this$props8$tabIndex","tabIndex","showIcon","icon","switcherIcon","draggable","motion","filterTreeNode","height","itemHeight","virtual","titleRender","dropIndicatorRender","onContextMenu","domProps","createElement","Provider","ref","getDerivedStateFromProps","prevState","entitiesMap","process","env","NODE_ENV","autoExpandParent","defaultExpandParent","defaultExpandAll","cloneKeyEntities","defaultExpandedKeys","defaultSelectedKeys","checkedKeyEntity","defaultCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","Component","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\n// TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria, getDragChildrenKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\nimport DropIndicator from './DropIndicator';\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    _this = _super.apply(this, arguments);\n    _this.destroyed = false;\n    _this.state = {\n      keyEntities: {},\n      indent: null,\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      dragging: false,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      dropContainerKey: null,\n      dropLevelOffset: null,\n      dropTargetPos: null,\n      dropAllowed: true,\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      listChanging: false,\n      prevProps: null\n    };\n    _this.dragStartMousePosition = null;\n    _this.listRef = /*#__PURE__*/React.createRef();\n\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          keyEntities = _this$state.keyEntities;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      _this.dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n      _this.setState({\n        dragging: true,\n        dragChildrenKeys: getDragChildrenKeys(eventKey, keyEntities),\n        indent: _this.listRef.current.getIndentWidth()\n      });\n\n      _this.setExpandedKeys(newExpandedKeys);\n\n      window.addEventListener('dragend', _this.onWindowDragEnd);\n\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n    /**\n     * [Legacy] Select handler is smaller than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state2 = _this.state,\n          expandedKeys = _this$state2.expandedKeys,\n          keyEntities = _this$state2.keyEntities,\n          dragChildrenKeys = _this$state2.dragChildrenKeys,\n          flattenNodes = _this$state2.flattenNodes,\n          indent = _this$state2.indent;\n      var _this$props = _this.props,\n          onDragEnter = _this$props.onDragEnter,\n          onExpand = _this$props.onExpand,\n          allowDrop = _this$props.allowDrop,\n          direction = _this$props.direction;\n      var pos = node.props.pos;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize.dragNode;\n\n      var _calcDropPosition = calcDropPosition(event, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition.dropPosition,\n          dropLevelOffset = _calcDropPosition.dropLevelOffset,\n          dropTargetKey = _calcDropPosition.dropTargetKey,\n          dropContainerKey = _calcDropPosition.dropContainerKey,\n          dropTargetPos = _calcDropPosition.dropTargetPos,\n          dropAllowed = _calcDropPosition.dropAllowed,\n          dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n\n      if (!dragNode || // don't allow drop inside its children\n      dragChildrenKeys.indexOf(dropTargetKey) !== -1 || // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        _this.setState({\n          dragOverNodeKey: null,\n          dropPosition: null,\n          dropLevelOffset: null,\n          dropTargetKey: null,\n          dropContainerKey: null,\n          dropTargetPos: null,\n          dropAllowed: false\n        });\n\n        return;\n      } // Side effect for delay drag\n\n\n      if (!_this.delayedDragEnterLogic) {\n        _this.delayedDragEnterLogic = {};\n      }\n\n      Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(_this.delayedDragEnterLogic[key]);\n      });\n\n      if (dragNode.props.eventKey !== node.props.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        event.persist();\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (!_this.state.dragging) return;\n\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n          var entity = keyEntities[node.props.eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, node.props.eventKey);\n          }\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setExpandedKeys(newExpandedKeys);\n          }\n\n          if (onExpand) {\n            onExpand(newExpandedKeys, {\n              node: convertNodePropsToEventData(node.props),\n              expanded: true,\n              nativeEvent: event.nativeEvent\n            });\n          }\n        }, 800);\n      } // Skip if drag node is self\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        _this.setState({\n          dragOverNodeKey: null,\n          dropPosition: null,\n          dropLevelOffset: null,\n          dropTargetKey: null,\n          dropContainerKey: null,\n          dropTargetPos: null,\n          dropAllowed: false\n        });\n\n        return;\n      } // Update drag over node and drag state\n\n\n      _this.setState({\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n\n      if (onDragEnter) {\n        onDragEnter({\n          event: event,\n          node: convertNodePropsToEventData(node.props),\n          expandedKeys: expandedKeys\n        });\n      }\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var _this$state3 = _this.state,\n          dragChildrenKeys = _this$state3.dragChildrenKeys,\n          flattenNodes = _this$state3.flattenNodes,\n          keyEntities = _this$state3.keyEntities,\n          expandedKeys = _this$state3.expandedKeys,\n          indent = _this$state3.indent;\n      var _this$props2 = _this.props,\n          onDragOver = _this$props2.onDragOver,\n          allowDrop = _this$props2.allowDrop,\n          direction = _this$props2.direction;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize2.dragNode;\n\n      var _calcDropPosition2 = calcDropPosition(event, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition2.dropPosition,\n          dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n          dropTargetKey = _calcDropPosition2.dropTargetKey,\n          dropContainerKey = _calcDropPosition2.dropContainerKey,\n          dropAllowed = _calcDropPosition2.dropAllowed,\n          dropTargetPos = _calcDropPosition2.dropTargetPos,\n          dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n\n      if (!dragNode || dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed caculated by calcDropPosition\n        return;\n      } // Update drag position\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(_this.state.dropPosition === null && _this.state.dropLevelOffset === null && _this.state.dropTargetKey === null && _this.state.dropContainerKey === null && _this.state.dropTargetPos === null && _this.state.dropAllowed === false && _this.state.dragOverNodeKey === null)) {\n          _this.setState({\n            dropPosition: null,\n            dropLevelOffset: null,\n            dropTargetKey: null,\n            dropContainerKey: null,\n            dropTargetPos: null,\n            dropAllowed: false,\n            dragOverNodeKey: null\n          });\n        }\n      } else if (!(dropPosition === _this.state.dropPosition && dropLevelOffset === _this.state.dropLevelOffset && dropTargetKey === _this.state.dropTargetKey && dropContainerKey === _this.state.dropContainerKey && dropTargetPos === _this.state.dropTargetPos && dropAllowed === _this.state.dropAllowed && dragOverNodeKey === _this.state.dragOverNodeKey)) {\n        _this.setState({\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    }; // since stopPropagation() is called in treeNode\n    // if onWindowDrag is called, whice means state is keeped, drag state should be cleared\n\n\n    _this.onWindowDragEnd = function (event) {\n      _this.onNodeDragEnd(event, null, true);\n\n      window.removeEventListener('dragend', _this.onWindowDragEnd);\n    }; // if onNodeDragEnd is called, onWindowDragEnd won't be called since stopPropagation() is called\n\n\n    _this.onNodeDragEnd = function (event, node) {\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (onDragEnd && !outsideTree) {\n        onDragEnd({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$getActiveItem;\n\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var _this$state4 = _this.state,\n          dragChildrenKeys = _this$state4.dragChildrenKeys,\n          dropPosition = _this$state4.dropPosition,\n          dropTargetKey = _this$state4.dropTargetKey,\n          dropTargetPos = _this$state4.dropTargetPos,\n          dropAllowed = _this$state4.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = _this.props.onDrop;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (dropTargetKey === null) return;\n\n      var abstractDropNodeProps = _objectSpread(_objectSpread({}, getTreeNodeProps(dropTargetKey, _this.getTreeNodeRequiredProps())), {}, {\n        active: ((_this$getActiveItem = _this.getActiveItem()) === null || _this$getActiveItem === void 0 ? void 0 : _this$getActiveItem.data.key) === dropTargetKey,\n        data: _this.state.keyEntities[dropTargetKey].node\n      });\n\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. This is a bug of rc-tree. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n        dragNodesKeys: [_this.dragNode.props.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n\n      if (onDrop && !outsideTree) {\n        onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.cleanDragState = function () {\n      var dragging = _this.state.dragging;\n\n      if (dragging) {\n        _this.setState({\n          dragging: false,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n\n      _this.dragStartMousePosition = null;\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props3 = _this.props,\n          onSelect = _this$props3.onSelect,\n          multiple = _this$props3.multiple;\n      var selected = treeNode.selected,\n          key = treeNode.key;\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = keyEntities[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state5 = _this.state,\n          keyEntities = _this$state5.keyEntities,\n          oriCheckedKeys = _this$state5.checkedKeys,\n          oriHalfCheckedKeys = _this$state5.halfCheckedKeys;\n      var _this$props4 = _this.props,\n          checkStrictly = _this$props4.checkStrictly,\n          onCheck = _this$props4.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return keyEntities[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = keyEntities[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props5 = _this.props,\n              loadData = _this$props5.loadData,\n              onLoad = _this$props5.onLoad;\n          var key = treeNode.key;\n\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            // react 15 will warn if return null\n            return {};\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this$state6 = _this.state,\n                currentLoadedKeys = _this$state6.loadedKeys,\n                currentLoadingKeys = _this$state6.loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n            var newLoadingKeys = arrDel(currentLoadingKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: 'load',\n                node: treeNode\n              });\n            }\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            resolve();\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      });\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      if (onFocus) {\n        onFocus.apply(void 0, arguments);\n      }\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      _this.onActiveChange(null);\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    _this.getTreeNodeRequiredProps = function () {\n      var _this$state7 = _this.state,\n          expandedKeys = _this$state7.expandedKeys,\n          selectedKeys = _this$state7.selectedKeys,\n          loadedKeys = _this$state7.loadedKeys,\n          loadingKeys = _this$state7.loadingKeys,\n          checkedKeys = _this$state7.checkedKeys,\n          halfCheckedKeys = _this$state7.halfCheckedKeys,\n          dragOverNodeKey = _this$state7.dragOverNodeKey,\n          dropPosition = _this$state7.dropPosition,\n          keyEntities = _this$state7.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    }; // =========================== Expanded ===========================\n\n    /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n\n\n    _this.setExpandedKeys = function (expandedKeys) {\n      var treeData = _this.state.treeData;\n      var flattenNodes = flattenTreeData(treeData, expandedKeys);\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var listChanging = _this.state.listChanging;\n      var _this$props6 = _this.props,\n          onExpand = _this$props6.onExpand,\n          loadData = _this$props6.loadData;\n      var key = treeNode.key,\n          expanded = treeNode.expanded; // Do nothing when motion is in progress\n\n      if (listChanging) {\n        return;\n      } // Update selected keys\n\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n\n      _this.setExpandedKeys(expandedKeys);\n\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys);\n\n            _this.setUncontrolledState({\n              flattenNodes: newFlattenTreeData\n            });\n          });\n        }\n      }\n    };\n\n    _this.onListChangeStart = function () {\n      _this.setUncontrolledState({\n        listChanging: true\n      });\n    };\n\n    _this.onListChangeEnd = function () {\n      setTimeout(function () {\n        _this.setUncontrolledState({\n          listChanging: false\n        });\n      });\n    }; // =========================== Keyboard ===========================\n\n\n    _this.onActiveChange = function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var onActiveChange = _this.props.onActiveChange;\n\n      if (activeKey === newActiveKey) {\n        return;\n      }\n\n      _this.setState({\n        activeKey: newActiveKey\n      });\n\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n\n    _this.getActiveItem = function () {\n      var _this$state8 = _this.state,\n          activeKey = _this$state8.activeKey,\n          flattenNodes = _this$state8.flattenNodes;\n\n      if (activeKey === null) {\n        return null;\n      }\n\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.data.key;\n        return key === activeKey;\n      }) || null;\n    };\n\n    _this.offsetActiveKey = function (offset) {\n      var _this$state9 = _this.state,\n          flattenNodes = _this$state9.flattenNodes,\n          activeKey = _this$state9.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.data.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n\n      if (item) {\n        var key = item.data.key;\n\n        _this.onActiveChange(key);\n      } else {\n        _this.onActiveChange(null);\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$state10 = _this.state,\n          activeKey = _this$state10.activeKey,\n          expandedKeys = _this$state10.expandedKeys,\n          checkedKeys = _this$state10.checkedKeys;\n      var _this$props7 = _this.props,\n          onKeyDown = _this$props7.onKeyDown,\n          checkable = _this$props7.checkable,\n          selectable = _this$props7.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var activeItem = _this.getActiveItem();\n\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n          data: activeItem.data,\n          active: true\n        }));\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n    /**\n     * Only update the value which is not in props\n     */\n\n\n    _this.setUncontrolledState = function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (_this.destroyed) {\n        return;\n      }\n\n      var needSync = false;\n      var allPassed = true;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) {\n          allPassed = false;\n          return;\n        }\n\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync && (!atomic || allPassed)) {\n        _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n      }\n    };\n\n    _this.scrollTo = function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('dragend', this.onWindowDragEnd);\n      this.destroyed = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$state11 = this.state,\n          focused = _this$state11.focused,\n          flattenNodes = _this$state11.flattenNodes,\n          keyEntities = _this$state11.keyEntities,\n          dragging = _this$state11.dragging,\n          activeKey = _this$state11.activeKey,\n          dropLevelOffset = _this$state11.dropLevelOffset,\n          dropContainerKey = _this$state11.dropContainerKey,\n          dropTargetKey = _this$state11.dropTargetKey,\n          dropPosition = _this$state11.dropPosition,\n          dragOverNodeKey = _this$state11.dragOverNodeKey,\n          indent = _this$state11.indent;\n      var _this$props8 = this.props,\n          prefixCls = _this$props8.prefixCls,\n          className = _this$props8.className,\n          style = _this$props8.style,\n          showLine = _this$props8.showLine,\n          focusable = _this$props8.focusable,\n          _this$props8$tabIndex = _this$props8.tabIndex,\n          tabIndex = _this$props8$tabIndex === void 0 ? 0 : _this$props8$tabIndex,\n          selectable = _this$props8.selectable,\n          showIcon = _this$props8.showIcon,\n          icon = _this$props8.icon,\n          switcherIcon = _this$props8.switcherIcon,\n          draggable = _this$props8.draggable,\n          checkable = _this$props8.checkable,\n          checkStrictly = _this$props8.checkStrictly,\n          disabled = _this$props8.disabled,\n          motion = _this$props8.motion,\n          loadData = _this$props8.loadData,\n          filterTreeNode = _this$props8.filterTreeNode,\n          height = _this$props8.height,\n          itemHeight = _this$props8.itemHeight,\n          virtual = _this$props8.virtual,\n          titleRender = _this$props8.titleRender,\n          dropIndicatorRender = _this$props8.dropIndicatorRender,\n          onContextMenu = _this$props8.onContextMenu,\n          direction = _this$props8.direction;\n      var domProps = getDataAndAria(this.props);\n      return /*#__PURE__*/React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          indent: indent,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          titleRender: titleRender,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n      }, /*#__PURE__*/React.createElement(NodeList, _extends({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: dragging,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange,\n        onListChangeStart: this.onListChangeStart,\n        onListChangeEnd: this.onListChangeEnd,\n        onContextMenu: onContextMenu\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeData; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData);\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData);\n        }\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  dropIndicatorRender: DropIndicator,\n  allowDrop: function allowDrop() {\n    return true;\n  }\n};\nTree.TreeNode = TreeNode;\nexport default Tree;"]},"metadata":{},"sourceType":"module"}