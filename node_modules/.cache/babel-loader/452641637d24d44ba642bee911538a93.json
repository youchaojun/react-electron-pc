{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport classNames from 'classnames';\nimport DirectoryTree from './DirectoryTree';\nimport { ConfigContext } from '../config-provider';\nimport collapseMotion from '../_util/motion';\nimport renderSwitcherIcon from './utils/iconUtil';\nimport dropIndicatorRender from './utils/dropIndicator';\nvar Tree = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction,\n      virtual = _React$useContext.virtual;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      showIcon = props.showIcon,\n      showLine = props.showLine,\n      _switcherIcon = props.switcherIcon,\n      blockNode = props.blockNode,\n      children = props.children,\n      checkable = props.checkable,\n      selectable = props.selectable;\n  var prefixCls = getPrefixCls('tree', customizePrefixCls);\n\n  var newProps = _extends(_extends({}, props), {\n    showLine: Boolean(showLine),\n    dropIndicatorRender: dropIndicatorRender\n  });\n\n  return /*#__PURE__*/React.createElement(RcTree, _extends({\n    itemHeight: 20,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    prefixCls: prefixCls,\n    className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-hide\"), !showIcon), _defineProperty(_classNames, \"\".concat(prefixCls, \"-block-node\"), blockNode), _defineProperty(_classNames, \"\".concat(prefixCls, \"-unselectable\"), !selectable), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className),\n    direction: direction,\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-checkbox-inner\")\n    }) : checkable,\n    selectable: selectable,\n    switcherIcon: function switcherIcon(nodeProps) {\n      return renderSwitcherIcon(prefixCls, _switcherIcon, showLine, nodeProps);\n    }\n  }), children);\n});\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n  checkable: false,\n  selectable: true,\n  showIcon: false,\n  motion: _extends(_extends({}, collapseMotion), {\n    motionAppear: false\n  }),\n  blockNode: false\n};\nexport default Tree;","map":{"version":3,"sources":["/Users/youn/Documents/younFolder/Demo/react-electron-pc/node_modules/antd/es/tree/Tree.js"],"names":["_defineProperty","_extends","React","RcTree","TreeNode","classNames","DirectoryTree","ConfigContext","collapseMotion","renderSwitcherIcon","dropIndicatorRender","Tree","forwardRef","props","ref","_classNames","_React$useContext","useContext","getPrefixCls","direction","virtual","customizePrefixCls","prefixCls","className","showIcon","showLine","_switcherIcon","switcherIcon","blockNode","children","checkable","selectable","newProps","Boolean","createElement","itemHeight","concat","nodeProps","defaultProps","motion","motionAppear"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport classNames from 'classnames';\nimport DirectoryTree from './DirectoryTree';\nimport { ConfigContext } from '../config-provider';\nimport collapseMotion from '../_util/motion';\nimport renderSwitcherIcon from './utils/iconUtil';\nimport dropIndicatorRender from './utils/dropIndicator';\nvar Tree = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction,\n      virtual = _React$useContext.virtual;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      showIcon = props.showIcon,\n      showLine = props.showLine,\n      _switcherIcon = props.switcherIcon,\n      blockNode = props.blockNode,\n      children = props.children,\n      checkable = props.checkable,\n      selectable = props.selectable;\n  var prefixCls = getPrefixCls('tree', customizePrefixCls);\n\n  var newProps = _extends(_extends({}, props), {\n    showLine: Boolean(showLine),\n    dropIndicatorRender: dropIndicatorRender\n  });\n\n  return /*#__PURE__*/React.createElement(RcTree, _extends({\n    itemHeight: 20,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    prefixCls: prefixCls,\n    className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-hide\"), !showIcon), _defineProperty(_classNames, \"\".concat(prefixCls, \"-block-node\"), blockNode), _defineProperty(_classNames, \"\".concat(prefixCls, \"-unselectable\"), !selectable), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className),\n    direction: direction,\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-checkbox-inner\")\n    }) : checkable,\n    selectable: selectable,\n    switcherIcon: function switcherIcon(nodeProps) {\n      return renderSwitcherIcon(prefixCls, _switcherIcon, showLine, nodeProps);\n    }\n  }), children);\n});\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n  checkable: false,\n  selectable: true,\n  showIcon: false,\n  motion: _extends(_extends({}, collapseMotion), {\n    motionAppear: false\n  }),\n  blockNode: false\n};\nexport default Tree;"]},"metadata":{},"sourceType":"module"}