{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport { homeApi } from '@/services/home';\nimport { CHANGE_USER_INFO } from '../actionTypes';\n\n// 测试saga\nfunction* unitListGet({\n  parmas\n}) {\n  try {\n    const res = yield homeApi.test({\n      params: parmas\n    });\n    const action = {\n      type: CHANGE_USER_INFO,\n      unitList: res\n    };\n    yield put(action);\n  } catch (err) {\n    throw new Error(err);\n  }\n}\n\nexport function* testSaga() {\n  yield takeEvery(CHANGE_USER_INFO, params => unitListGet(params));\n}","map":{"version":3,"sources":["/Users/youn/Documents/younFolder/Demo/react-electron-pc/src/store/sagas/test.tsx"],"names":["put","takeEvery","homeApi","CHANGE_USER_INFO","unitListGet","parmas","res","test","params","action","type","unitList","err","Error","testSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SAASC,gBAAT,QAAiC,gBAAjC;;AAMA;AACA,UAAUC,WAAV,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAuC;AACrC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMJ,OAAO,CAACK,IAAR,CAAa;AAAEC,MAAAA,MAAM,EAAEH;AAAV,KAAb,CAAlB;AACA,UAAMI,MAAyB,GAAG;AAChCC,MAAAA,IAAI,EAAEP,gBAD0B;AAEhCQ,MAAAA,QAAQ,EAAEL;AAFsB,KAAlC;AAKA,UAAMN,GAAG,CAACS,MAAD,CAAT;AACD,GARD,CAQE,OAAOG,GAAP,EAAY;AACZ,UAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACD;AACF;;AACD,OAAO,UAAUE,QAAV,GAAmC;AACxC,QAAMb,SAAS,CAACE,gBAAD,EAAoBK,MAAD,IAAiBJ,WAAW,CAACI,MAAD,CAA/C,CAAf;AACD","sourcesContent":["import { put, takeEvery } from 'redux-saga/effects';\nimport { homeApi } from '@/services/home';\nimport { SagaIterator } from 'redux-saga';\nimport { CHANGE_USER_INFO } from '../actionTypes';\n\nexport interface UnitListGetSagaIF {\n  type: CHANGE_USER_INFO;\n  unitList: any[];\n}\n// 测试saga\nfunction* unitListGet({ parmas }: any) {\n  try {\n    const res = yield homeApi.test({ params: parmas });\n    const action: UnitListGetSagaIF = {\n      type: CHANGE_USER_INFO,\n      unitList: res,\n    };\n\n    yield put(action);\n  } catch (err) {\n    throw new Error(err);\n  }\n}\nexport function* testSaga(): SagaIterator {\n  yield takeEvery(CHANGE_USER_INFO, (params: any) => unitListGet(params));\n}\n"]},"metadata":{},"sourceType":"module"}