{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/youn/Documents/younFolder/Demo/react-electron-pc/src/layouts/MenuTab.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from 'react';\nimport { Tag, Dropdown, Menu } from 'antd';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport routerInsiderConfig from '@/routers/routerInsiderConfig';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addMenuList } from '@/store/actionCreators/public';\nimport { dropByCacheKey } from 'react-router-cache-route';\nimport { listFlat, styleBtn } from '@/utils';\nimport MenuBreadcrumb from './MenuBreadcrumb';\nimport { getParentRouter } from '@/routers/routersCommon';\n\nconst MenuTab = () => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const result = useSelector(state => state.publicReducer);\n  const menuTab = result.menuTab;\n  const currentTabIndex = result.currentTabIndex;\n  const menuTabList = menuTab[currentTabIndex];\n  const path = location.pathname;\n  const routerList = listFlat(routerInsiderConfig); // const params = useParams<{ id: string }>();\n\n  const {\n    state\n  } = location;\n  const findMenuActiveIdx = menuTabList.findIndex(item => item.active);\n  const tabList = getParentRouter(path, routerInsiderConfig);\n  const index = tabList.findIndex(item => item.isTab === false);\n  tabList.splice(0, index - 1);\n  /**\n   * 过滤菜单颜色\n   * @param index 点击的index\n   * @param active 是否选中\n   */\n\n  const filterMenuStyle = (index, active) => {\n    const left = index === 0 ? '-10px' : index * 105 - 10 + 'px';\n    const zIndex = active ? 99 : 0;\n    return {\n      left,\n      zIndex\n    };\n  }; // 更新菜单store\n\n\n  const reloadMent = useCallback(newList => {\n    let newMenuTab = [...menuTab];\n    newMenuTab[currentTabIndex] = newList;\n    dispatch(addMenuList(newMenuTab));\n  }, [currentTabIndex, dispatch, menuTab]); // 添加菜单\n\n  const addTab = useCallback((val, newList) => {\n    const newTab = routerList.filter(item => path.startsWith(item.basePath));\n\n    if (newTab[0].isTab === false) {\n      newList[0].path = path;\n      newList[0].pathList.push({\n        path: path,\n        state: val.state\n      });\n    } else {\n      newList.push({\n        id: val.id,\n        name: val.name,\n        path: path,\n        pathList: [{\n          path: val.path,\n          state: val.state\n        }],\n        active: true,\n        // tabMore: val.tabMore,\n        state: val.state\n      });\n      reloadMent(newList);\n    }\n  }, [reloadMent, path, routerList]); // 添加菜单\n\n  const addTabMenu = useCallback(() => {\n    let newList = [...menuTabList];\n    const newTab = routerList.filter(item => path.startsWith(item.basePath));\n    if (!newTab[0]) return false; // 全部设置未选中\n\n    newList.map(val => val.active = false); // 判断同一个路由是否需要添加多个tab\n\n    if (state === null || state === void 0 ? void 0 : state.tabMore) {\n      const indexActive = newList.findIndex(item => item.id === state.id);\n\n      if (indexActive !== -1) {\n        newList[indexActive].active = true;\n        history.push({\n          pathname: newList[indexActive].path,\n          state: newList[indexActive].state\n        });\n      } else {\n        addTab({\n          id: state.id,\n          name: state.tabName,\n          path: path,\n          pathList: [],\n          state,\n          tabMore: true,\n          active: true\n        }, newList);\n      }\n    } else {\n      var _newTab$;\n\n      /* 如果同一路由不需要添加多个tab的走下边逻辑\n        如果tabList的长度为1,并且tab找不到当前的id，则需要有添加tab \n        如果大于1则不需要添加tab,找到当前的tab把path更改为当前的path,\n         */\n      // 如果isTab为false，则不需要添加tab,他一定有tab，切tab的索引就为当前的索引，所以只需要找出newList中active为true的即可\n      if (((_newTab$ = newTab[0]) === null || _newTab$ === void 0 ? void 0 : _newTab$.isTab) === false) {\n        newList[findMenuActiveIdx].path = path;\n        newList[findMenuActiveIdx].state = state;\n        newList[findMenuActiveIdx].active = true;\n        newList[findMenuActiveIdx].pathList[tabList.length - 1] = {\n          path: path,\n          state: state\n        }; // 如果newList[findMenuActiveIdx]中没有这个地址则push,如果有则替换\n      } else {\n        // 判断是否有tab，没有则添加，有则直接替换path\n        const findTabIndex = newList.findIndex(item => item.id === newTab[0].id);\n\n        if (findTabIndex !== -1) {\n          newList[findTabIndex].path = path;\n\n          if (state) {\n            newList[findMenuActiveIdx].state = state;\n          }\n\n          newList[findTabIndex].active = true;\n          reloadMent(newList);\n        } else {\n          newTab[0].state = state;\n          addTab(newTab[0], newList);\n        }\n      }\n    }\n  }, [addTab, findMenuActiveIdx, reloadMent, history, path, menuTabList, state, routerList, tabList.length]);\n  useEffect(() => {\n    var _menuTabList$findMenu;\n\n    // 不走添加tab的页面（目前只有首页和空页面，先写死，之后多了在router中添加一个字段判断）\n    let isNoTab = path !== '/' && path !== '/empty';\n\n    if (((_menuTabList$findMenu = menuTabList[findMenuActiveIdx]) === null || _menuTabList$findMenu === void 0 ? void 0 : _menuTabList$findMenu.path) !== path && isNoTab) {\n      addTabMenu();\n    }\n  }, [addTabMenu, menuTabList, findMenuActiveIdx, path]);\n  /**\n   * 点击关闭菜单\n   * @param index 点击的index\n   */\n\n  const closeMenu = index => {\n    let newList = [...menuTabList]; // 需要判断是不是当前，不是当前路由可以直接清除，如果 是当前路由需要先跳转到其他再删除，不然不能删除\n\n    if (newList[index].path === path) {\n      // 判断当前是否为最后一个，如果为最后一个则跳转到他前一个，如果不是最后一个则调到他后边一个\n      if (index === newList.length - 1) {\n        newList[index - 1].active = true;\n        history.push({\n          pathname: newList[index - 1].path,\n          state: newList[index - 1].state\n        });\n        dropByCache(newList[index].pathList);\n      } else {\n        history.push(newList[index + 1].path);\n        dropByCache(newList[index].pathList);\n      }\n    } else {\n      dropByCache(newList[index].pathList);\n    }\n\n    newList.splice(index, 1);\n    reloadMent(newList);\n  };\n  /**\n   * 点击菜单切换\n   * @param index 点击的index\n   */\n\n\n  const changeMenu = index => {\n    var _newList$index$state;\n\n    let newList = [...menuTabList];\n    newList.map(val => val.active = false); // 点击切换菜单 如果同一路由是多个tab的走下边逻辑\n\n    if ((_newList$index$state = newList[index].state) === null || _newList$index$state === void 0 ? void 0 : _newList$index$state.tabMore) {\n      history.push({\n        pathname: newList[index].path,\n        state: newList[index].state\n      });\n    } else {\n      history.push({\n        pathname: newList[index].path,\n        state: newList[index].state\n      });\n    }\n\n    newList[index].active = true;\n    reloadMent(newList);\n  };\n  /**\n   * 截取文字，超过5个字符的用省略号显示\n   * @param text 文字\n   */\n\n\n  const filterText = text => {\n    return text.length > 5 ? text.substr(0, 5) + '...' : text;\n  };\n  /**\n   * 重新加载\n   * 先跳到空白页，清除路由缓存，在跳转过去则实现刷新\n   */\n\n\n  const onReload = idx => {\n    let newTabList = [...menuTab]; // 先获取basePath\n\n    const newTab = routerList.filter(item => newTabList[currentTabIndex][idx].path.startsWith(item.basePath));\n    dropByCacheKey(newTab[0].basePath);\n    history.push('/empty');\n    setTimeout(() => {\n      history.push({\n        pathname: newTabList[currentTabIndex][idx].path,\n        state: newTabList[currentTabIndex][idx].state\n      });\n    }, 100);\n  }; // 右键关闭当前\n\n\n  const closeMenuClick = idx => {\n    if (menuTabList[idx].path !== '/home') {\n      closeMenu(idx);\n    }\n  }; // 关闭左侧\n\n\n  const closeLeft = idx => {\n    let newList = [...menuTabList];\n    const list = newList.slice(1, idx);\n\n    for (let val of list) {\n      dropByCache(val.pathList);\n    }\n\n    newList.splice(1, idx);\n    reloadMent(newList);\n  }; // 关闭右侧\n\n\n  const closeRight = idx => {\n    // 如果当前不是选中状态\n    if (idx !== findMenuActiveIdx) {\n      history.push({\n        pathname: menuTabList[idx].path,\n        state: menuTabList[idx].state\n      });\n    }\n\n    let newList = [...menuTabList];\n    const list = newList.slice(idx + 1, newList.length);\n\n    for (let val1 of list) {\n      for (let val2 of val1.pathList) {\n        // 先获取basePath\n        const newTab = routerList.filter(item => val2.path.startsWith(item.basePath));\n        dropByCacheKey(newTab[0].basePath);\n      }\n    }\n\n    newList.splice(idx + 1, newList.length - 1);\n    reloadMent(newList);\n  }; // 清除路由缓存\n\n\n  const dropByCache = list => {\n    for (let val of list) {\n      // 先获取basePath\n      const newTab = routerList.filter(item => val.path.startsWith(item.basePath));\n      dropByCacheKey(newTab[0].basePath);\n    }\n  };\n\n  const menu = (idx, active) => {\n    const newTabList = [...menuTab];\n    const newList = newTabList[currentTabIndex];\n    return /*#__PURE__*/_jsxDEV(Menu, {\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        style: active ? undefined : styleBtn,\n        onClick: () => onReload(idx),\n        children: \"\\u91CD\\u65B0\\u52A0\\u8F7D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        onClick: () => closeMenuClick(idx),\n        children: \"\\u5173\\u95ED\\u5F53\\u524D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        style: idx > 1 ? undefined : styleBtn,\n        onClick: () => closeLeft(idx),\n        children: \"\\u5173\\u95ED\\u5DE6\\u4FA7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        style: idx < newList.length - 1 ? undefined : styleBtn,\n        onClick: () => closeRight(idx),\n        children: \"\\u5173\\u95ED\\u53F3\\u4FA7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-tab\",\n      children: menuTabList.map((val, index) => /*#__PURE__*/_jsxDEV(Dropdown, {\n        overlay: () => menu(index, val.active),\n        overlayClassName: \"dropdown-menu\",\n        trigger: ['contextMenu'],\n        children: /*#__PURE__*/_jsxDEV(Tag, {\n          closable: val.name === '首页' ? false : true,\n          onClose: () => closeMenu(index),\n          style: filterMenuStyle(index, val.active),\n          className: `menu-item ${val.active ? 'active' : ''}`,\n          onClick: () => changeMenu(index),\n          children: filterText(val.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)\n      }, val.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuBreadcrumb, {\n      onReload: idx => onReload(idx)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MenuTab, \"onBA+gudh5pspA/S/n36KV+UOm0=\", false, function () {\n  return [useHistory, useLocation, useDispatch, useSelector];\n});\n\n_c = MenuTab;\nexport default MenuTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuTab\");","map":{"version":3,"sources":["/Users/youn/Documents/younFolder/Demo/react-electron-pc/src/layouts/MenuTab.tsx"],"names":["React","useCallback","useEffect","Tag","Dropdown","Menu","useHistory","useLocation","routerInsiderConfig","useSelector","useDispatch","addMenuList","dropByCacheKey","listFlat","styleBtn","MenuBreadcrumb","getParentRouter","MenuTab","history","location","dispatch","result","state","publicReducer","menuTab","currentTabIndex","menuTabList","path","pathname","routerList","findMenuActiveIdx","findIndex","item","active","tabList","index","isTab","splice","filterMenuStyle","left","zIndex","reloadMent","newList","newMenuTab","addTab","val","newTab","filter","startsWith","basePath","pathList","push","id","name","addTabMenu","map","tabMore","indexActive","tabName","length","findTabIndex","isNoTab","closeMenu","dropByCache","changeMenu","filterText","text","substr","onReload","idx","newTabList","setTimeout","closeMenuClick","closeLeft","list","slice","closeRight","val1","val2","menu","undefined"],"mappings":"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","sourcesContent":["import React, { CSSProperties, ReactElement, useCallback, useEffect } from 'react';\nimport { Tag, Dropdown, Menu } from 'antd';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport routerInsiderConfig from '@/routers/routerInsiderConfig';\nimport { MenuTabIF, PathListIF } from '@/typings/common';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { PublicReducerIF } from '@/store/reducers';\nimport { PublicStateIF } from '@/store/states/public';\nimport { addMenuList } from '@/store/actionCreators/public';\nimport { RoutersConfigIF, RouterStateIF } from '@/typings/router';\nimport { dropByCacheKey } from 'react-router-cache-route';\nimport { listFlat, styleBtn } from '@/utils';\nimport MenuBreadcrumb from './MenuBreadcrumb';\nimport { getParentRouter } from '@/routers/routersCommon';\n\nconst MenuTab = (): ReactElement => {\n  const history = useHistory();\n  const location = useLocation<RouterStateIF>();\n  const dispatch = useDispatch();\n  const result = useSelector<PublicReducerIF, PublicStateIF>((state) => state.publicReducer);\n  const menuTab = result.menuTab;\n  const currentTabIndex = result.currentTabIndex;\n  const menuTabList = menuTab[currentTabIndex];\n  const path = location.pathname;\n  const routerList = listFlat(routerInsiderConfig);\n  // const params = useParams<{ id: string }>();\n  const { state } = location;\n  const findMenuActiveIdx = menuTabList.findIndex((item) => item.active);\n  const tabList = getParentRouter(path, routerInsiderConfig);\n  const index = tabList.findIndex((item) => item.isTab === false);\n  tabList.splice(0, index - 1);\n\n  /**\n   * 过滤菜单颜色\n   * @param index 点击的index\n   * @param active 是否选中\n   */\n  const filterMenuStyle = (index: number, active: boolean): CSSProperties => {\n    const left = index === 0 ? '-10px' : index * 105 - 10 + 'px';\n    const zIndex = active ? 99 : 0;\n    return { left, zIndex };\n  };\n\n  // 更新菜单store\n  const reloadMent = useCallback(\n    (newList: MenuTabIF[]): void => {\n      let newMenuTab = [...menuTab];\n      newMenuTab[currentTabIndex] = newList;\n      dispatch(addMenuList(newMenuTab));\n    },\n    [currentTabIndex, dispatch, menuTab]\n  );\n\n  // 添加菜单\n  const addTab = useCallback(\n    (val: RoutersConfigIF | MenuTabIF, newList: MenuTabIF[]): void => {\n      const newTab = routerList.filter((item) => path.startsWith(item.basePath));\n      if (newTab[0].isTab === false) {\n        newList[0].path = path;\n        newList[0].pathList.push({ path: path, state: val.state });\n      } else {\n        newList.push({\n          id: val.id,\n          name: val.name,\n          path: path,\n          pathList: [\n            {\n              path: val.path,\n              state: val.state,\n            },\n          ],\n          active: true,\n          // tabMore: val.tabMore,\n          state: val.state,\n        });\n        reloadMent(newList);\n      }\n    },\n    [reloadMent, path, routerList]\n  );\n\n  // 添加菜单\n  const addTabMenu = useCallback((): void | boolean => {\n    let newList: MenuTabIF[] = [...menuTabList];\n    const newTab = routerList.filter((item) => path.startsWith(item.basePath));\n    if (!newTab[0]) return false;\n    // 全部设置未选中\n    newList.map((val) => (val.active = false));\n    // 判断同一个路由是否需要添加多个tab\n    if (state?.tabMore) {\n      const indexActive = newList.findIndex((item) => item.id === state.id);\n      if (indexActive !== -1) {\n        newList[indexActive].active = true;\n        history.push({\n          pathname: newList[indexActive].path,\n          state: newList[indexActive].state,\n        });\n      } else {\n        addTab(\n          {\n            id: state.id,\n            name: state.tabName,\n            path: path,\n            pathList: [],\n            state,\n            tabMore: true,\n            active: true,\n          },\n          newList\n        );\n      }\n    } else {\n      /* 如果同一路由不需要添加多个tab的走下边逻辑\n        如果tabList的长度为1,并且tab找不到当前的id，则需要有添加tab \n        如果大于1则不需要添加tab,找到当前的tab把path更改为当前的path,\n         */\n      // 如果isTab为false，则不需要添加tab,他一定有tab，切tab的索引就为当前的索引，所以只需要找出newList中active为true的即可\n      if (newTab[0]?.isTab === false) {\n        newList[findMenuActiveIdx].path = path;\n        newList[findMenuActiveIdx].state = state;\n        newList[findMenuActiveIdx].active = true;\n        newList[findMenuActiveIdx].pathList[tabList.length - 1] = {\n          path: path,\n          state: state,\n        };\n        // 如果newList[findMenuActiveIdx]中没有这个地址则push,如果有则替换\n      } else {\n        // 判断是否有tab，没有则添加，有则直接替换path\n        const findTabIndex = newList.findIndex((item) => item.id === newTab[0].id);\n        if (findTabIndex !== -1) {\n          newList[findTabIndex].path = path;\n          if (state) {\n            newList[findMenuActiveIdx].state = state;\n          }\n          newList[findTabIndex].active = true;\n          reloadMent(newList);\n        } else {\n          newTab[0].state = state;\n          addTab(newTab[0], newList);\n        }\n      }\n    }\n  }, [\n    addTab,\n    findMenuActiveIdx,\n    reloadMent,\n    history,\n    path,\n    menuTabList,\n    state,\n    routerList,\n    tabList.length,\n  ]);\n\n  useEffect(() => {\n    // 不走添加tab的页面（目前只有首页和空页面，先写死，之后多了在router中添加一个字段判断）\n    let isNoTab = path !== '/' && path !== '/empty';\n    if (menuTabList[findMenuActiveIdx]?.path !== path && isNoTab) {\n      addTabMenu();\n    }\n  }, [addTabMenu, menuTabList, findMenuActiveIdx, path]);\n\n  /**\n   * 点击关闭菜单\n   * @param index 点击的index\n   */\n  const closeMenu = (index: number): void => {\n    let newList: MenuTabIF[] = [...menuTabList];\n    // 需要判断是不是当前，不是当前路由可以直接清除，如果 是当前路由需要先跳转到其他再删除，不然不能删除\n    if (newList[index].path === path) {\n      // 判断当前是否为最后一个，如果为最后一个则跳转到他前一个，如果不是最后一个则调到他后边一个\n      if (index === newList.length - 1) {\n        newList[index - 1].active = true;\n        history.push({\n          pathname: newList[index - 1].path,\n          state: newList[index - 1].state,\n        });\n        dropByCache(newList[index].pathList);\n      } else {\n        history.push(newList[index + 1].path);\n        dropByCache(newList[index].pathList);\n      }\n    } else {\n      dropByCache(newList[index].pathList);\n    }\n    newList.splice(index, 1);\n    reloadMent(newList);\n  };\n\n  /**\n   * 点击菜单切换\n   * @param index 点击的index\n   */\n  const changeMenu = (index: number): void => {\n    let newList: MenuTabIF[] = [...menuTabList];\n    newList.map((val) => (val.active = false));\n    // 点击切换菜单 如果同一路由是多个tab的走下边逻辑\n    if (newList[index].state?.tabMore) {\n      history.push({\n        pathname: newList[index].path,\n        state: newList[index].state,\n      });\n    } else {\n      history.push({\n        pathname: newList[index].path,\n        state: newList[index].state,\n      });\n    }\n    newList[index].active = true;\n    reloadMent(newList);\n  };\n\n  /**\n   * 截取文字，超过5个字符的用省略号显示\n   * @param text 文字\n   */\n  const filterText = (text: string): string => {\n    return text.length > 5 ? text.substr(0, 5) + '...' : text;\n  };\n\n  /**\n   * 重新加载\n   * 先跳到空白页，清除路由缓存，在跳转过去则实现刷新\n   */\n  const onReload = (idx: number) => {\n    let newTabList: MenuTabIF[][] = [...menuTab];\n    // 先获取basePath\n    const newTab = routerList.filter((item) =>\n      newTabList[currentTabIndex][idx].path.startsWith(item.basePath)\n    );\n    dropByCacheKey(newTab[0].basePath);\n    history.push('/empty');\n    setTimeout(() => {\n      history.push({\n        pathname: newTabList[currentTabIndex][idx].path,\n        state: newTabList[currentTabIndex][idx].state,\n      });\n    }, 100);\n  };\n\n  // 右键关闭当前\n  const closeMenuClick = (idx: number) => {\n    if (menuTabList[idx].path !== '/home') {\n      closeMenu(idx);\n    }\n  };\n\n  // 关闭左侧\n  const closeLeft = (idx: number) => {\n    let newList: MenuTabIF[] = [...menuTabList];\n    const list = newList.slice(1, idx);\n    for (let val of list) {\n      dropByCache(val.pathList);\n    }\n    newList.splice(1, idx);\n    reloadMent(newList);\n  };\n\n  // 关闭右侧\n  const closeRight = (idx: number) => {\n    // 如果当前不是选中状态\n    if (idx !== findMenuActiveIdx) {\n      history.push({\n        pathname: menuTabList[idx].path,\n        state: menuTabList[idx].state,\n      });\n    }\n    let newList: MenuTabIF[] = [...menuTabList];\n    const list = newList.slice(idx + 1, newList.length);\n    for (let val1 of list) {\n      for (let val2 of val1.pathList) {\n        // 先获取basePath\n        const newTab = routerList.filter((item) => val2.path.startsWith(item.basePath));\n        dropByCacheKey(newTab[0].basePath);\n      }\n    }\n    newList.splice(idx + 1, newList.length - 1);\n    reloadMent(newList);\n  };\n\n  // 清除路由缓存\n  const dropByCache = (list: PathListIF[]) => {\n    for (let val of list) {\n      // 先获取basePath\n      const newTab = routerList.filter((item) => val.path.startsWith(item.basePath));\n      dropByCacheKey(newTab[0].basePath);\n    }\n  };\n\n  const menu = (idx: number, active: boolean): ReactElement => {\n    const newTabList: MenuTabIF[][] = [...menuTab];\n    const newList: MenuTabIF[] = newTabList[currentTabIndex];\n    return (\n      <Menu>\n        <Menu.Item style={active ? undefined : styleBtn} onClick={() => onReload(idx)}>\n          重新加载\n        </Menu.Item>\n        <Menu.Item onClick={() => closeMenuClick(idx)}>关闭当前</Menu.Item>\n        <Menu.Item style={idx > 1 ? undefined : styleBtn} onClick={() => closeLeft(idx)}>\n          关闭左侧\n        </Menu.Item>\n        <Menu.Item\n          style={idx < newList.length - 1 ? undefined : styleBtn}\n          onClick={() => closeRight(idx)}\n        >\n          关闭右侧\n        </Menu.Item>\n      </Menu>\n    );\n  };\n  return (\n    <>\n      <div className=\"menu-tab\">\n        {menuTabList.map((val, index) => (\n          <Dropdown\n            key={val.id}\n            overlay={() => menu(index, val.active)}\n            overlayClassName=\"dropdown-menu\"\n            trigger={['contextMenu']}\n          >\n            <Tag\n              closable={val.name === '首页' ? false : true}\n              onClose={() => closeMenu(index)}\n              style={filterMenuStyle(index, val.active)}\n              className={`menu-item ${val.active ? 'active' : ''}`}\n              onClick={() => changeMenu(index)}\n            >\n              {filterText(val.name)}\n            </Tag>\n          </Dropdown>\n        ))}\n      </div>\n      <MenuBreadcrumb onReload={(idx: number) => onReload(idx)} />\n    </>\n  );\n};\n\nexport default MenuTab;\n"]},"metadata":{},"sourceType":"module"}