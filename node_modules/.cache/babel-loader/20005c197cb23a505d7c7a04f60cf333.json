{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/youn/Documents/younFolder/Demo/react-electron-pc/src/layouts/ElectronMenu/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CloseElectron from './CloseElectron';\nimport IconFont from '@/components/IconFont';\nimport User from '../User';\nimport { currentThemeBG, ipcRenderer, isElectron } from '@/utils';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeModule } from '@/store/actionCreators/public';\nimport { menuRouter } from '@/routers/menuRouter';\nimport { useHistory } from 'react-router-dom';\n\nconst ElectronMenu = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const result = useSelector(state => state.publicReducer);\n  const resUser = useSelector(state => state.loginReducer);\n  const userInfo = resUser.userInfo;\n  const currentTabIndex = result.currentTabIndex;\n  const menuTabList = result.menuTab;\n  const permissions = userInfo.currentPermissions;\n  const [menuList, setMenuList] = useState([]); // change modules\n\n  const changeModules = idx => {\n    dispatch(changeModule(idx));\n    const pathTo = menuTabList[idx].filter(item => item.active);\n    /**\n     * 切换时判断是否之前有选择的tab\n     * 如果有则需要跳转到之前的路由\n     * 如果没有则跳转到菜单的第一个路由\n     */\n\n    if (pathTo.length > 0) {\n      history.push(pathTo[0].path);\n    } else {\n      history.push(menuRouter[idx].children[0].path);\n    }\n  };\n\n  useEffect(() => {\n    // 处理menuRouter的权限\n    // 如果下级菜单中有一个权限则显示 如果没有则不显示 找到一个就终止\n    menuRouter.map(item1 => {\n      for (let item2 of item1.children) {\n        if (permissions.some(authorityOuter => item2.authority.includes(authorityOuter))) {\n          item1.show = true;\n          return;\n        }\n\n        if (item2.children) {\n          for (let item3 of item2.children) {\n            if (permissions.some(authorityOuter => item3.authority.includes(authorityOuter))) {\n              item1.show = true;\n              return;\n            }\n          }\n        }\n      }\n\n      return item1;\n    });\n    setMenuList(menuRouter);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"electron-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '152px'\n        },\n        children: \"\\u516C\\u53F8logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"system-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: menuList === null || menuList === void 0 ? void 0 : menuList.map((val, idx) => val.show ? /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => changeModules(idx),\n            className: currentTabIndex === idx ? 'active' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line\",\n              style: currentTabIndex === idx ? currentThemeBG('primary') : undefined\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", val.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this)]\n          }, val.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this) : null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), isElectron ? /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"electron-btn\",\n        children: [/*#__PURE__*/_jsxDEV(IconFont, {\n          type: \"icon-zuixiaohua2\",\n          onClick: () => ipcRenderer.send('window-min')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconFont, {\n          type: \"icon-zuidahua\",\n          onClick: () => ipcRenderer.send('window-max')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CloseElectron, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ElectronMenu, \"2U17Ja7IDlV2zWXgx+ISzkZ2XPs=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = ElectronMenu;\nexport default ElectronMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"ElectronMenu\");","map":{"version":3,"sources":["/Users/youn/Documents/younFolder/Demo/react-electron-pc/src/layouts/ElectronMenu/index.tsx"],"names":["React","useEffect","useState","CloseElectron","IconFont","User","currentThemeBG","ipcRenderer","isElectron","useDispatch","useSelector","changeModule","menuRouter","useHistory","ElectronMenu","dispatch","history","result","state","publicReducer","resUser","loginReducer","userInfo","currentTabIndex","menuTabList","menuTab","permissions","currentPermissions","menuList","setMenuList","changeModules","idx","pathTo","filter","item","active","length","push","path","children","map","item1","item2","some","authorityOuter","authority","includes","show","item3","width","val","undefined","name","id","send"],"mappings":"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","sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport CloseElectron from './CloseElectron';\nimport IconFont from '@/components/IconFont';\nimport User from '../User';\nimport { currentThemeBG, ipcRenderer, isElectron } from '@/utils';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeModule } from '@/store/actionCreators/public';\nimport { LoginReducerIF, PublicReducerIF } from '@/store/reducers';\nimport { PublicStateIF } from '@/store/states/public';\nimport { menuRouter, ModuleMenuRouterIF } from '@/routers/menuRouter';\nimport { useHistory } from 'react-router-dom';\nimport { LoginStateIF } from '@/store/states';\n\nconst ElectronMenu: FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const result = useSelector<PublicReducerIF, PublicStateIF>((state) => state.publicReducer);\n  const resUser = useSelector<LoginReducerIF, LoginStateIF>((state) => state.loginReducer);\n  const userInfo = resUser.userInfo;\n  const currentTabIndex = result.currentTabIndex;\n  const menuTabList = result.menuTab;\n  const permissions = userInfo.currentPermissions;\n  const [menuList, setMenuList] = useState<ModuleMenuRouterIF[]>([]);\n  // change modules\n  const changeModules = (idx: number) => {\n    dispatch(changeModule(idx));\n    const pathTo = menuTabList[idx].filter((item) => item.active);\n    /**\n     * 切换时判断是否之前有选择的tab\n     * 如果有则需要跳转到之前的路由\n     * 如果没有则跳转到菜单的第一个路由\n     */\n    if (pathTo.length > 0) {\n      history.push(pathTo[0].path);\n    } else {\n      history.push(menuRouter[idx].children[0].path);\n    }\n  };\n\n  useEffect(() => {\n    // 处理menuRouter的权限\n    // 如果下级菜单中有一个权限则显示 如果没有则不显示 找到一个就终止\n    menuRouter.map((item1) => {\n      for (let item2 of item1.children) {\n        if (permissions.some((authorityOuter) => item2.authority.includes(authorityOuter))) {\n          item1.show = true;\n          return;\n        }\n        if (item2.children) {\n          for (let item3 of item2.children) {\n            if (permissions.some((authorityOuter) => item3.authority.includes(authorityOuter))) {\n              item1.show = true;\n              return;\n            }\n          }\n        }\n      }\n      return item1;\n    });\n    setMenuList(menuRouter);\n  }, []);\n  return (\n    <>\n      <div className=\"electron-menu\">\n        <div style={{ width: '152px' }}>公司logo</div>\n        <li className=\"system-list\">\n          <div className=\"list\">\n            {menuList?.map((val, idx) =>\n              val.show ? (\n                <div\n                  onClick={() => changeModules(idx)}\n                  className={currentTabIndex === idx ? 'active' : ''}\n                  key={val.id}\n                >\n                  <div\n                    className=\"line\"\n                    style={currentTabIndex === idx ? currentThemeBG('primary') : undefined}\n                  ></div>\n                  <p> {val.name}</p>\n                </div>\n              ) : null\n            )}\n          </div>\n          <User />\n        </li>\n        {isElectron ? (\n          <li className=\"electron-btn\">\n            <IconFont type=\"icon-zuixiaohua2\" onClick={() => ipcRenderer.send('window-min')} />\n            <IconFont type=\"icon-zuidahua\" onClick={() => ipcRenderer.send('window-max')} />\n            <CloseElectron />\n          </li>\n        ) : null}\n      </div>\n    </>\n  );\n};\nexport default ElectronMenu;\n"]},"metadata":{},"sourceType":"module"}