{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/youn/Documents/younFolder/Demo/react-electron-pc/src/routers/index.tsx\";\nimport React, { Suspense, lazy } from 'react';\nimport { HashRouter, BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport routerInsiderConfig from './routerInsiderConfig';\nimport SiderLayout from '@/layouts/SiderLayout';\nimport CacheRoute, { CacheSwitch } from 'react-router-cache-route';\nimport { Content } from '@/layouts';\nimport { isElectron, listFlat } from '@/utils';\nimport { PageLoading } from '@/components';\nimport Login from '@/pages/Login';\nconst ErrorPage = /*#__PURE__*/lazy(_c = () => import('@/pages/Error'));\n_c2 = ErrorPage;\n\nconst Routers = () => {\n  // electron只能用hash路由 浏览器用BrowserRouter\n  const Router = isElectron ? HashRouter : BrowserRouter; // catch router的生命周期\n  // interface ISProps extends RouteComponentProps {\n  //   cacheLifecycles: {\n  //     didRecover: any;\n  //     didCache: any;\n  //   };\n  // }\n\n  const renderRoutes = () => {\n    const routerList = listFlat(routerInsiderConfig);\n    return routerList.map(route => /*#__PURE__*/_jsxDEV(CacheRoute, {\n      when: () => route.cache,\n      path: route.path,\n      cacheKey: route.basePath,\n      exact: true,\n      component: props => /*#__PURE__*/_jsxDEV(Content, { ...props,\n        component: route.component\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, route.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SiderLayout, {\n        children: /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(PageLoading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 31\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(CacheSwitch, {\n            children: [renderRoutes(), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/error\",\n              component: ErrorPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Routers;\nexport default Routers;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ErrorPage$lazy\");\n$RefreshReg$(_c2, \"ErrorPage\");\n$RefreshReg$(_c3, \"Routers\");","map":{"version":3,"sources":["/Users/youn/Documents/younFolder/Demo/react-electron-pc/src/routers/index.tsx"],"names":["React","Suspense","lazy","HashRouter","BrowserRouter","Route","Switch","Redirect","routerInsiderConfig","SiderLayout","CacheRoute","CacheSwitch","Content","isElectron","listFlat","PageLoading","Login","ErrorPage","Routers","Router","renderRoutes","routerList","map","route","cache","path","basePath","props","component","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAAyCC,IAAzC,QAAqD,OAArD;AACA,SACEC,UADF,EAEEC,aAFF,EAGEC,KAHF,EAKEC,MALF,EAMEC,QANF,QAOO,kBAPP;AAQA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,UAAP,IAAqBC,WAArB,QAAwC,0BAAxC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,SAArC;AAEA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,MAAMC,SAAS,gBAAGf,IAAI,MAAC,MAAM,OAAO,eAAP,CAAP,CAAtB;MAAMe,S;;AAEN,MAAMC,OAAW,GAAG,MAAM;AACxB;AACA,QAAMC,MAAiB,GAAGN,UAAU,GAAGV,UAAH,GAAgBC,aAApD,CAFwB,CAIxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMgB,YAAY,GAAG,MAAM;AACzB,UAAMC,UAAU,GAAGP,QAAQ,CAACN,mBAAD,CAA3B;AACA,WAAOa,UAAU,CAACC,GAAX,CAAgBC,KAAD,iBACpB,QAAC,UAAD;AAEE,MAAA,IAAI,EAAE,MAAMA,KAAK,CAACC,KAFpB;AAGE,MAAA,IAAI,EAAED,KAAK,CAACE,IAHd;AAIE,MAAA,QAAQ,EAAEF,KAAK,CAACG,QAJlB;AAKE,MAAA,KAAK,MALP;AAME,MAAA,SAAS,EAAGC,KAAD,iBACT,QAAC,OAAD,OAAaA,KAAb;AAAoB,QAAA,SAAS,EAAEJ,KAAK,CAACK;AAArC;AAAA;AAAA;AAAA;AAAA;AAPJ,OACOL,KAAK,CAACM,EADb;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAYD,GAdD;;AAgBA,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAEb;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,WAAD;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,QAAQ,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBAApB;AAAA,iCACE,QAAC,WAAD;AAAA,uBACGI,YAAY,EADf,eAEE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,SAAS,EAAEH;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,QAAD;AAAU,cAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA7CD;;MAAMC,O;AA+CN,eAAeA,OAAf","sourcesContent":["import React, { FC, Suspense, ReactType, lazy } from 'react';\nimport {\n  HashRouter,\n  BrowserRouter,\n  Route,\n  RouteComponentProps,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport routerInsiderConfig from './routerInsiderConfig';\nimport SiderLayout from '@/layouts/SiderLayout';\nimport CacheRoute, { CacheSwitch } from 'react-router-cache-route';\nimport { Content } from '@/layouts';\nimport { isElectron, listFlat } from '@/utils';\nimport { RouterStateIF } from '@/typings/router';\nimport { PageLoading } from '@/components';\nimport Login from '@/pages/Login';\n\nconst ErrorPage = lazy(() => import('@/pages/Error'));\n\nconst Routers: FC = () => {\n  // electron只能用hash路由 浏览器用BrowserRouter\n  const Router: ReactType = isElectron ? HashRouter : BrowserRouter;\n\n  // catch router的生命周期\n  // interface ISProps extends RouteComponentProps {\n  //   cacheLifecycles: {\n  //     didRecover: any;\n  //     didCache: any;\n  //   };\n  // }\n\n  const renderRoutes = () => {\n    const routerList = listFlat(routerInsiderConfig);\n    return routerList.map((route) => (\n      <CacheRoute\n        key={route.id}\n        when={() => route.cache}\n        path={route.path}\n        cacheKey={route.basePath}\n        exact\n        component={(props: RouteComponentProps<null, { statusCode?: number }, RouterStateIF>) => (\n          <Content {...props} component={route.component} />\n        )}\n      />\n    ));\n  };\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Login} />\n        {/* 有sider的页面 InnerSider */}\n        <SiderLayout>\n          <Suspense fallback={<PageLoading />}>\n            <CacheSwitch>\n              {renderRoutes()}\n              <Route path=\"/error\" component={ErrorPage} />\n              <Redirect to=\"/error\" />\n            </CacheSwitch>\n          </Suspense>\n        </SiderLayout>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routers;\n"]},"metadata":{},"sourceType":"module"}