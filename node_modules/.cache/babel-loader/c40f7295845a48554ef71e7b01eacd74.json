{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst useScrollTop = () => {\n  _s();\n\n  const result = useSelector(state => state.publicReducer);\n  let menuTabList = result.menuTab;\n  const currentTabIndex = result.currentTabIndex;\n  const location = useLocation();\n  const {\n    state\n  } = location;\n  let currentTabList = menuTabList[currentTabIndex];\n  const scrollTabIndex = currentTabList.findIndex(item => item.id === (state === null || state === void 0 ? void 0 : state.id)); // 设置初始值\n\n  const setScrollTop = () => {\n    const scrollTopDom = document.getElementById('scrollTop');\n\n    if (scrollTopDom && scrollTabIndex !== -1) {\n      scrollTopDom.scrollTop = currentTabList[scrollTabIndex].scrollTop ? currentTabList[scrollTabIndex].scrollTop : 0;\n    }\n  }; // 获取当前的设置值\n\n\n  const getScrollTop = () => {\n    var _document$getElementB;\n\n    const scrollTop = (_document$getElementB = document.getElementById('scrollTop')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.scrollTop;\n\n    if (scrollTabIndex !== -1) {\n      menuTabList[currentTabIndex][scrollTabIndex].scrollTop = scrollTop;\n    }\n  };\n\n  return {\n    setScrollTop,\n    getScrollTop\n  };\n};\n\n_s(useScrollTop, \"3rlZCbXhmZVQQ3iXw/pnPzU4jMc=\", false, function () {\n  return [useSelector, useLocation];\n});\n\nexport default useScrollTop;","map":{"version":3,"sources":["/Users/youn/Documents/younFolder/Demo/react-electron-pc/src/components/useScrollTop.tsx"],"names":["useLocation","useSelector","useScrollTop","result","state","publicReducer","menuTabList","menuTab","currentTabIndex","location","currentTabList","scrollTabIndex","findIndex","item","id","setScrollTop","scrollTopDom","document","getElementById","scrollTop","getScrollTop"],"mappings":";;AACA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AASA,MAAMC,YAAY,GAAG,MAAmB;AAAA;;AACtC,QAAMC,MAAM,GAAGF,WAAW,CAAkCG,KAAD,IAAWA,KAAK,CAACC,aAAlD,CAA1B;AACA,MAAIC,WAAW,GAAGH,MAAM,CAACI,OAAzB;AACA,QAAMC,eAAe,GAAGL,MAAM,CAACK,eAA/B;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYK,QAAlB;AACA,MAAIC,cAAc,GAAGJ,WAAW,CAACE,eAAD,CAAhC;AAEA,QAAMG,cAAc,GAAGD,cAAc,CAACE,SAAf,CAA0BC,IAAD,IAAUA,IAAI,CAACC,EAAL,MAAYV,KAAZ,aAAYA,KAAZ,uBAAYA,KAAK,CAAEU,EAAnB,CAAnC,CAAvB,CARsC,CAUtC;;AACA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAArB;;AACA,QAAIF,YAAY,IAAIL,cAAc,KAAK,CAAC,CAAxC,EAA2C;AACzCK,MAAAA,YAAY,CAACG,SAAb,GAAyBT,cAAc,CAACC,cAAD,CAAd,CAA+BQ,SAA/B,GACrBT,cAAc,CAACC,cAAD,CAAd,CAA+BQ,SADV,GAErB,CAFJ;AAGD;AACF,GAPD,CAXsC,CAoBtC;;;AACA,QAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,UAAMD,SAAS,4BAAGF,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAH,0DAAG,sBAAsCC,SAAxD;;AACA,QAAIR,cAAc,KAAK,CAAC,CAAxB,EAA2B;AACzBL,MAAAA,WAAW,CAACE,eAAD,CAAX,CAA6BG,cAA7B,EAA6CQ,SAA7C,GAAyDA,SAAzD;AACD;AACF,GALD;;AAMA,SAAO;AACLJ,IAAAA,YADK;AAELK,IAAAA;AAFK,GAAP;AAID,CA/BD;;GAAMlB,Y;UACWD,W,EAGED,W;;;AA6BnB,eAAeE,YAAf","sourcesContent":["import { RouterStateIF } from '@/typings/router';\nimport { useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { PublicReducerIF } from '@/store/reducers';\nimport { PublicStateIF } from '@/store/states/public';\n\ninterface ScrollTopIF {\n  setScrollTop(): void;\n  getScrollTop(): void;\n}\n\nconst useScrollTop = (): ScrollTopIF => {\n  const result = useSelector<PublicReducerIF, PublicStateIF>((state) => state.publicReducer);\n  let menuTabList = result.menuTab;\n  const currentTabIndex = result.currentTabIndex;\n  const location = useLocation<RouterStateIF>();\n  const { state } = location;\n  let currentTabList = menuTabList[currentTabIndex];\n\n  const scrollTabIndex = currentTabList.findIndex((item) => item.id === state?.id);\n\n  // 设置初始值\n  const setScrollTop = () => {\n    const scrollTopDom = document.getElementById('scrollTop');\n    if (scrollTopDom && scrollTabIndex !== -1) {\n      scrollTopDom.scrollTop = currentTabList[scrollTabIndex].scrollTop\n        ? currentTabList[scrollTabIndex].scrollTop!\n        : 0;\n    }\n  };\n\n  // 获取当前的设置值\n  const getScrollTop = () => {\n    const scrollTop = document.getElementById('scrollTop')?.scrollTop;\n    if (scrollTabIndex !== -1) {\n      menuTabList[currentTabIndex][scrollTabIndex].scrollTop = scrollTop;\n    }\n  };\n  return {\n    setScrollTop,\n    getScrollTop,\n  };\n};\n\nexport default useScrollTop;\n"]},"metadata":{},"sourceType":"module"}