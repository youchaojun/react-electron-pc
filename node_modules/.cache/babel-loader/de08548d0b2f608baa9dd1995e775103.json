{"ast":null,"code":"import * as React from 'react';\nimport Cell from '../Cell';\nimport TableContext from '../context/TableContext';\n\nfunction ExpandedRow(_ref) {\n  var prefixCls = _ref.prefixCls,\n      children = _ref.children,\n      Component = _ref.component,\n      cellComponent = _ref.cellComponent,\n      fixHeader = _ref.fixHeader,\n      fixColumn = _ref.fixColumn,\n      horizonScroll = _ref.horizonScroll,\n      className = _ref.className,\n      expanded = _ref.expanded,\n      componentWidth = _ref.componentWidth,\n      colSpan = _ref.colSpan;\n\n  var _React$useContext = React.useContext(TableContext),\n      scrollbarSize = _React$useContext.scrollbarSize; // Cache render node\n\n\n  return React.useMemo(function () {\n    var contentNode = children;\n\n    if (fixColumn) {\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: componentWidth - (fixHeader ? scrollbarSize : 0),\n          position: 'sticky',\n          left: 0,\n          overflow: 'hidden'\n        },\n        className: \"\".concat(prefixCls, \"-expanded-row-fixed\")\n      }, contentNode);\n    }\n\n    return /*#__PURE__*/React.createElement(Component, {\n      className: className,\n      style: {\n        display: expanded ? null : 'none'\n      }\n    }, /*#__PURE__*/React.createElement(Cell, {\n      component: cellComponent,\n      prefixCls: prefixCls,\n      colSpan: colSpan\n    }, contentNode));\n  }, [children, Component, fixHeader, horizonScroll, className, expanded, componentWidth, colSpan, scrollbarSize]);\n}\n\nexport default ExpandedRow;","map":{"version":3,"sources":["/Users/youn/Documents/younFolder/Demo/react-electron-pc/node_modules/rc-table/es/Body/ExpandedRow.js"],"names":["React","Cell","TableContext","ExpandedRow","_ref","prefixCls","children","Component","component","cellComponent","fixHeader","fixColumn","horizonScroll","className","expanded","componentWidth","colSpan","_React$useContext","useContext","scrollbarSize","useMemo","contentNode","createElement","style","width","position","left","overflow","concat","display"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;AAAA,MAEIC,SAAS,GAAGH,IAAI,CAACI,SAFrB;AAAA,MAGIC,aAAa,GAAGL,IAAI,CAACK,aAHzB;AAAA,MAIIC,SAAS,GAAGN,IAAI,CAACM,SAJrB;AAAA,MAKIC,SAAS,GAAGP,IAAI,CAACO,SALrB;AAAA,MAMIC,aAAa,GAAGR,IAAI,CAACQ,aANzB;AAAA,MAOIC,SAAS,GAAGT,IAAI,CAACS,SAPrB;AAAA,MAQIC,QAAQ,GAAGV,IAAI,CAACU,QARpB;AAAA,MASIC,cAAc,GAAGX,IAAI,CAACW,cAT1B;AAAA,MAUIC,OAAO,GAAGZ,IAAI,CAACY,OAVnB;;AAYA,MAAIC,iBAAiB,GAAGjB,KAAK,CAACkB,UAAN,CAAiBhB,YAAjB,CAAxB;AAAA,MACIiB,aAAa,GAAGF,iBAAiB,CAACE,aADtC,CAbyB,CAc4B;;;AAGrD,SAAOnB,KAAK,CAACoB,OAAN,CAAc,YAAY;AAC/B,QAAIC,WAAW,GAAGf,QAAlB;;AAEA,QAAIK,SAAJ,EAAe;AACbU,MAAAA,WAAW,GAAG,aAAarB,KAAK,CAACsB,aAAN,CAAoB,KAApB,EAA2B;AACpDC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAET,cAAc,IAAIL,SAAS,GAAGS,aAAH,GAAmB,CAAhC,CADhB;AAELM,UAAAA,QAAQ,EAAE,QAFL;AAGLC,UAAAA,IAAI,EAAE,CAHD;AAILC,UAAAA,QAAQ,EAAE;AAJL,SAD6C;AAOpDd,QAAAA,SAAS,EAAE,GAAGe,MAAH,CAAUvB,SAAV,EAAqB,qBAArB;AAPyC,OAA3B,EAQxBgB,WARwB,CAA3B;AASD;;AAED,WAAO,aAAarB,KAAK,CAACsB,aAAN,CAAoBf,SAApB,EAA+B;AACjDM,MAAAA,SAAS,EAAEA,SADsC;AAEjDU,MAAAA,KAAK,EAAE;AACLM,QAAAA,OAAO,EAAEf,QAAQ,GAAG,IAAH,GAAU;AADtB;AAF0C,KAA/B,EAKjB,aAAad,KAAK,CAACsB,aAAN,CAAoBrB,IAApB,EAA0B;AACxCO,MAAAA,SAAS,EAAEC,aAD6B;AAExCJ,MAAAA,SAAS,EAAEA,SAF6B;AAGxCW,MAAAA,OAAO,EAAEA;AAH+B,KAA1B,EAIbK,WAJa,CALI,CAApB;AAUD,GAzBM,EAyBJ,CAACf,QAAD,EAAWC,SAAX,EAAsBG,SAAtB,EAAiCE,aAAjC,EAAgDC,SAAhD,EAA2DC,QAA3D,EAAqEC,cAArE,EAAqFC,OAArF,EAA8FG,aAA9F,CAzBI,CAAP;AA0BD;;AAED,eAAehB,WAAf","sourcesContent":["import * as React from 'react';\nimport Cell from '../Cell';\nimport TableContext from '../context/TableContext';\n\nfunction ExpandedRow(_ref) {\n  var prefixCls = _ref.prefixCls,\n      children = _ref.children,\n      Component = _ref.component,\n      cellComponent = _ref.cellComponent,\n      fixHeader = _ref.fixHeader,\n      fixColumn = _ref.fixColumn,\n      horizonScroll = _ref.horizonScroll,\n      className = _ref.className,\n      expanded = _ref.expanded,\n      componentWidth = _ref.componentWidth,\n      colSpan = _ref.colSpan;\n\n  var _React$useContext = React.useContext(TableContext),\n      scrollbarSize = _React$useContext.scrollbarSize; // Cache render node\n\n\n  return React.useMemo(function () {\n    var contentNode = children;\n\n    if (fixColumn) {\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: componentWidth - (fixHeader ? scrollbarSize : 0),\n          position: 'sticky',\n          left: 0,\n          overflow: 'hidden'\n        },\n        className: \"\".concat(prefixCls, \"-expanded-row-fixed\")\n      }, contentNode);\n    }\n\n    return /*#__PURE__*/React.createElement(Component, {\n      className: className,\n      style: {\n        display: expanded ? null : 'none'\n      }\n    }, /*#__PURE__*/React.createElement(Cell, {\n      component: cellComponent,\n      prefixCls: prefixCls,\n      colSpan: colSpan\n    }, contentNode));\n  }, [children, Component, fixHeader, horizonScroll, className, expanded, componentWidth, colSpan, scrollbarSize]);\n}\n\nexport default ExpandedRow;"]},"metadata":{},"sourceType":"module"}