{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nexport function toArray(value) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return value !== undefined ? [value] : [];\n}\n/**\n * Convert outer props value into internal value\n */\n\nexport function toInnerValue(value, _ref) {\n  var labelInValue = _ref.labelInValue,\n      combobox = _ref.combobox;\n  var valueMap = new Map();\n\n  if (value === undefined || value === '' && combobox) {\n    return [[], valueMap];\n  }\n\n  var values = Array.isArray(value) ? value : [value];\n  var rawValues = values;\n\n  if (labelInValue) {\n    rawValues = values.map(function (itemValue) {\n      var key = itemValue.key,\n          val = itemValue.value;\n      var finalVal = val !== undefined ? val : key;\n      valueMap.set(finalVal, itemValue);\n      return finalVal;\n    });\n  }\n\n  return [rawValues, valueMap];\n}\n/**\n * Convert internal value into out event value\n */\n\nexport function toOuterValues(valueList, _ref2) {\n  var optionLabelProp = _ref2.optionLabelProp,\n      labelInValue = _ref2.labelInValue,\n      prevValueMap = _ref2.prevValueMap,\n      options = _ref2.options,\n      getLabeledValue = _ref2.getLabeledValue;\n  var values = valueList;\n\n  if (labelInValue) {\n    values = values.map(function (val) {\n      return getLabeledValue(val, {\n        options: options,\n        prevValueMap: prevValueMap,\n        labelInValue: labelInValue,\n        optionLabelProp: optionLabelProp\n      });\n    });\n  }\n\n  return values;\n}\nexport function removeLastEnabledValue(measureValues, values) {\n  var newValues = _toConsumableArray(values);\n\n  var removeIndex;\n\n  for (removeIndex = measureValues.length - 1; removeIndex >= 0; removeIndex -= 1) {\n    if (!measureValues[removeIndex].disabled) {\n      break;\n    }\n  }\n\n  var removedValue = null;\n\n  if (removeIndex !== -1) {\n    removedValue = newValues[removeIndex];\n    newValues.splice(removeIndex, 1);\n  }\n\n  return {\n    values: newValues,\n    removedValue: removedValue\n  };\n}\nexport var isClient = typeof window !== 'undefined' && window.document && window.document.documentElement;\n/** Is client side and not jsdom */\n\nexport var isBrowserClient = process.env.NODE_ENV !== 'test' && isClient;\nvar uuid = 0;\n/** Get unique id for accessibility usage */\n\nexport function getUUID() {\n  var retId; // Test never reach\n\n  /* istanbul ignore if */\n\n  if (isBrowserClient) {\n    retId = uuid;\n    uuid += 1;\n  } else {\n    retId = 'TEST_OR_SSR';\n  }\n\n  return retId;\n}","map":{"version":3,"sources":["/Users/youn/Documents/younFolder/Demo/react-electron-pc/node_modules/rc-select/es/utils/commonUtil.js"],"names":["_toConsumableArray","toArray","value","Array","isArray","undefined","toInnerValue","_ref","labelInValue","combobox","valueMap","Map","values","rawValues","map","itemValue","key","val","finalVal","set","toOuterValues","valueList","_ref2","optionLabelProp","prevValueMap","options","getLabeledValue","removeLastEnabledValue","measureValues","newValues","removeIndex","length","disabled","removedValue","splice","isClient","window","document","documentElement","isBrowserClient","process","env","NODE_ENV","uuid","getUUID","retId"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nexport function toArray(value) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return value !== undefined ? [value] : [];\n}\n/**\n * Convert outer props value into internal value\n */\n\nexport function toInnerValue(value, _ref) {\n  var labelInValue = _ref.labelInValue,\n      combobox = _ref.combobox;\n  var valueMap = new Map();\n\n  if (value === undefined || value === '' && combobox) {\n    return [[], valueMap];\n  }\n\n  var values = Array.isArray(value) ? value : [value];\n  var rawValues = values;\n\n  if (labelInValue) {\n    rawValues = values.map(function (itemValue) {\n      var key = itemValue.key,\n          val = itemValue.value;\n      var finalVal = val !== undefined ? val : key;\n      valueMap.set(finalVal, itemValue);\n      return finalVal;\n    });\n  }\n\n  return [rawValues, valueMap];\n}\n/**\n * Convert internal value into out event value\n */\n\nexport function toOuterValues(valueList, _ref2) {\n  var optionLabelProp = _ref2.optionLabelProp,\n      labelInValue = _ref2.labelInValue,\n      prevValueMap = _ref2.prevValueMap,\n      options = _ref2.options,\n      getLabeledValue = _ref2.getLabeledValue;\n  var values = valueList;\n\n  if (labelInValue) {\n    values = values.map(function (val) {\n      return getLabeledValue(val, {\n        options: options,\n        prevValueMap: prevValueMap,\n        labelInValue: labelInValue,\n        optionLabelProp: optionLabelProp\n      });\n    });\n  }\n\n  return values;\n}\nexport function removeLastEnabledValue(measureValues, values) {\n  var newValues = _toConsumableArray(values);\n\n  var removeIndex;\n\n  for (removeIndex = measureValues.length - 1; removeIndex >= 0; removeIndex -= 1) {\n    if (!measureValues[removeIndex].disabled) {\n      break;\n    }\n  }\n\n  var removedValue = null;\n\n  if (removeIndex !== -1) {\n    removedValue = newValues[removeIndex];\n    newValues.splice(removeIndex, 1);\n  }\n\n  return {\n    values: newValues,\n    removedValue: removedValue\n  };\n}\nexport var isClient = typeof window !== 'undefined' && window.document && window.document.documentElement;\n/** Is client side and not jsdom */\n\nexport var isBrowserClient = process.env.NODE_ENV !== 'test' && isClient;\nvar uuid = 0;\n/** Get unique id for accessibility usage */\n\nexport function getUUID() {\n  var retId; // Test never reach\n\n  /* istanbul ignore if */\n\n  if (isBrowserClient) {\n    retId = uuid;\n    uuid += 1;\n  } else {\n    retId = 'TEST_OR_SSR';\n  }\n\n  return retId;\n}"]},"metadata":{},"sourceType":"module"}